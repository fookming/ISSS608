{
  "hash": "91251d5e121eef64ec9d962737867bdc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 01\"\nauthor: \"Ee Fook Ming\"\ndate: \"February 8, 2025\"\ndate-modified: last-modified\nexecute:\n  echo: true\n  code-fold: true\n  code-summary: \"Show Code\"\n  eval: true\n  warning: false\n  freeze: true\nformat:\n  html:\n    toc: true\n    number-sections: true\n---\n\n\n\n[Overview and Background: Ship Performance in the Gulf of Guinea]{style=\"font-size: 44px; font-weight: bold;\"}\n\n# Introduction\n\nThe maritime industry is a cornerstone of global trade, ensuring the smooth transportation of goods across continents. The efficient performance of ships is crucial to optimizing fuel consumption, minimizing operational costs, and maximizing revenue. This assignment explores ship performance trends using the Ship Performance Clustering Dataset, focusing on ships operating in the Gulf of Guinea—a vital maritime region known for its economic and strategic importance.\n\nBy analyzing ship performance metrics such as speed, efficiency, operational cost, and revenue, we aim to uncover insights that can enhance operational decision-making. This study employs data visualization techniques to identify key patterns, trends, and potential optimizations in ship performance.\n\n![](images/clipboard-4268411684.png)\n\n## Key Observations from the Map\n\n**Countries Surrounding the Gulf of Guinea**\n\n-   The Gulf of Guinea is bordered by West and Central African nations, including: Nigeria, Ghana, Ivory Coast, Liberia, Senegal, Benin, Togo, Cameroon, Gabon, Angola, Equatorial Guinea, and the Democratic Republic of the Congo.\n-   These countries rely heavily on ports, fishing, and offshore oil production.\n\n**Strategic Maritime Significance**\n\n-   The Niger Delta, highlighted in yellow, is a key oil-producing region in Nigeria, contributing to the global energy supply.\n-   The ports along the Gulf of Guinea serve as major hubs for international trade, handling large volumes of cargo and oil shipments.\n\n**Security Concerns:**\n\n-   The Gulf of Guinea is a hotspot for maritime piracy, especially near Nigeria, Cameroon, and Ghana.\n-   Ships navigating these waters often face security risks, requiring escort vessels, naval patrols, and advanced tracking systems.\n\n**Shipping and Economic Importance**\n\n-   The Atlantic Ocean shipping lanes passing through the Gulf of Guinea connect Africa to Europe, Asia, and the Americas.\n-   Major exports include crude oil, liquefied natural gas (LNG), timber, cocoa, and fish.\n\n## Relevance to This Assignment\n\nFor an analysis of ship performance **in terms of profitability** in the Gulf of Guinea, it would involve integrating the following tasks:\n\n1.  Route efficiency for profit optimization: Compare vessel performance and profit margins across short-haul, long-haul, and transoceanic routes. Identify which routes yield the highest returns relative to operational costs.\n\n2.  Weather impact on profitability: Examine how adverse conditions (e.g., storms, rough seas) influence speed, fuel consumption, and ultimately, voyage revenue and profitability.\n\n3.  Operational cost variations: Investigate differences in costs tied to fuel prices, maintenance, and shipping lanes to pinpoint opportunities for cost savings and revenue maximization.\n\n# Background and Content\n\n## Maritime Significance of the Gulf of Guinea\n\nThe Gulf of Guinea serves as a major maritime trade route, connecting West Africa to global markets. The region hosts various types of commercial ships, including tankers, container ships, and bulk carriers, each operating under different economic and environmental conditions. Given the challenges posed by fuel costs, maintenance, and weather conditions, shipowners and operators constantly seek ways to improve efficiency while reducing operational expenses.\n\n## Data Overview\n\nThe dataset used in this study is a synthetic but realistic representation of maritime operations. The key attributes include:\n\n-   Speed Over Ground (knots)\n-   Distance Traveled (nautical miles)\n-   Engine Power (kW)\n-   Operational Cost per Voyage (USD)\n-   Revenue per Voyage (USD)\n-   Efficiency (nautical miles per kilowatt-hour)\n-   Ship Type, Route Type, Engine Type, and Maintenance Status\n\nThis dataset provides a rich foundation for exploratory data analysis (EDA), clustering analysis, and performance optimization.\n\n### Understanding the Dataset\n\nThis dataset consists of 2736 rows and 18 columns, categorized into numerical and categorical features. Key attributes include:\n\n#### Numerical Features (12 Columns)\n\n1.  Speed_Over_Ground_knots – Ship speed over water (knots)\n2.  Engine_Power_kW – Engine power output (kilowatts)\n3.  Distance_Traveled_nm – Distance traveled per voyage (nautical miles)\n4.  Draft_meters – The vertical distance from the waterline to the bottom of the hull (meters)\n5.  Cargo_Weight_tons – Weight of the cargo transported (metric tons)\n6.  Operational_Cost_USD – Cost per voyage (USD)\n7.  Revenue_per_Voyage_USD – Revenue per voyage (USD)\n8.  Turnaround_Time_hours – Time spent in port between arrival and departure (hours)\n9.  Efficiency_nm_per_kWh – Energy efficiency in nautical miles per kilowatt-hour\n10. Seasonal_Impact_Score – Factor capturing how seasonal conditions affect operations (e.g., ice, monsoons)\n11. Weekly_Voyage_Count – Number of voyages carried out on a weekly basis\n12. Average_Load_Percentage – Percentage of the ship’s cargo capacity utilized per voyage\n\n#### Categorical Features (5 Columns)\n\n1.  Ship_Type – Type of the ship (e.g., Container Ship, Fish Carrier, Bulk Carrier)\n2.  Route_Type – Type of route (e.g., Short-haul, Long-haul, Transoceanic)\n3.  Engine_Type – Type of engine/fuel (e.g., Diesel, Heavy Fuel Oil, Steam Turbine)\n4.  Maintenance_Status – Overall maintenance condition (e.g., Good, Fair, Critical)\n5.  Weather_Condition – Weather or sea state during the voyage (e.g., Calm, Moderate, Rough)\n\n### Summary\n\n-   Total Columns: 18\n-   Breakdown by Data Type:\n    -   Date/Time: 1 column (Date)\n    -   Numeric: 12 columns (e.g., Speed_Over_Ground_knots, Cargo_Weight_tons)\n    -   Categorical: 5 columns (e.g., Ship_Type, Engine_Type)\n\nThese columns collectively capture operational, financial, and environmental factors that can be used to measure profitability and optimize operational efficiency. By examining the interplay between operational costs, revenue, speed, and fuel consumption—and factoring in variables like maintenance status, seasonal impact, and route characteristics—shipping companies gain actionable insights into how best to manage costs, improve turnaround times, and increase revenue. This, in turn, supports data-driven decisions aimed at maximizing margins, minimizing environmental impact, and ensuring sustainable, efficient voyages.\n\n# Load & Explore the Dataset\n\n-   Loading the required libraries\n-   Loading the dataset into R.\n-   Checking the structure (columns, data types).\n-   Identifying missing values and duplicates.\n\n## Loading Libraries\n\n## Essential R Packages for Data Science and Visualization\n\nThis document provides an overview of essential R packages commonly used for data science, data visualization, and dynamic reporting.\n\n### Core Data Science Libraries\n\n-   [**tidyverse**](https://www.tidyverse.org/): A collection of integrated packages designed for modern data science workflows, including data import, tidying, transformation, visualization, and modeling.\n-   [**haven**](https://haven.tidyverse.org/): Enables R to read and write data stored in SAS, SPSS, and Stata formats, ensuring seamless interoperability with statistical software.\n-   [**knitr**](https://yihui.org/knitr/): Facilitates dynamic report generation, allowing users to embed R code in markdown and generate high-quality documents.\n\n### Visualization Enhancements for ggplot2\n\n-   [**patchwork**](https://patchwork.data-imaginist.com/): Simplifies the arrangement of multiple ggplot2-based visualizations into composite figures for improved storytelling.\n-   [**ggthemes**](https://jrnold.github.io/ggthemes/): Provides additional themes, scales, and geoms to enhance the appearance of ggplot2 visualizations.\n-   [**scales**](https://scales.r-lib.org/): Supports improved data labeling, annotation, and scale transformations for ggplot2.\n-   [**ggridges**](https://wilkelab.org/ggridges/): Enables the creation of ridgeline plots, useful for visualizing distribution changes over time or across categories.\n-   [**ggpubr**](https://rpkgs.datanovia.com/ggpubr/): Provides functions for creating publication-ready plots with minimal effort.\n-   [**gganimate**](https://gganimate.com/): Extends ggplot2 to include animation, making it possible to visualize dynamic data over time.\n-   [**ggdist**](https://mjskay.github.io/ggdist/): Offers enhanced tools for visualizing statistical distributions and uncertainties in data.\n-   [**ggtext**](https://wilkelab.org/ggtext/): Enhances text rendering and formatting in ggplot2 visualizations.\n-   [**ggalt**](https://github.com/hrbrmstr/ggalt): A collection of additional geoms, coordinates, and statistics that extend ggplot2 capabilities.\n-   [**ggextra**](https://cran.r-project.org/package=ggExtra): Adds marginal plots and supplementary visual elements to ggplot2 graphics.\n-   [**cowplot**](https://wilkelab.org/cowplot/): Provides tools for creating publication-quality figures, including alignment functions and themes for consistent presentation.\n-   [**ggnewscale**](https://github.com/eliocamp/ggnewscale): Allows the definition of multiple independent scales within a single ggplot2 visualization, useful for complex multivariate plots.\n\n## Loading the libraries using Pacman\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, \n               ggplot2, \n               skimr,  # For data summary \n               janitor, # For cleaning column names\n               SmartEDA,\n               easystats,\n               gtsummary,\n               ggstatsplot,\n               knitr,\n               kableExtra,\n               patchwork,\n               GGally,\n               ggridges,\n               lubridate,\n               scales)\n```\n:::\n\n\n\n## Load & Inspect Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- read.csv(\"data/Ship_Performance_Dataset.csv\")\n```\n:::\n\n\n\n### Data Overview\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  ExpData(type = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions     Value\n1                                   Sample size (nrow)      2736\n2                              No. of variables (ncol)        18\n3                    No. of numeric/interger variables        12\n4                              No. of factor variables         0\n5                                No. of text variables         6\n6                             No. of logical variables         0\n7                          No. of identifier variables        11\n8                                No. of date variables         0\n9             No. of zero variance variables (uniform)         0\n10               %. of variables having complete cases 100% (18)\n11   %. of variables having >0% and <50% missing cases    0% (0)\n12 %. of variables having >=50% and <90% missing cases    0% (0)\n13          %. of variables having >=90% missing cases    0% (0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  ExpData(type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index           Variable_Name Variable_Type Sample_n Missing_Count\n1      1                    Date     character     2736             0\n2      2               Ship_Type     character     2736             0\n3      3              Route_Type     character     2736             0\n4      4             Engine_Type     character     2736             0\n5      5      Maintenance_Status     character     2736             0\n6      6 Speed_Over_Ground_knots       numeric     2736             0\n7      7         Engine_Power_kW       numeric     2736             0\n8      8    Distance_Traveled_nm       numeric     2736             0\n9      9            Draft_meters       numeric     2736             0\n10    10       Weather_Condition     character     2736             0\n11    11       Cargo_Weight_tons       numeric     2736             0\n12    12    Operational_Cost_USD       numeric     2736             0\n13    13  Revenue_per_Voyage_USD       numeric     2736             0\n14    14   Turnaround_Time_hours       numeric     2736             0\n15    15   Efficiency_nm_per_kWh       numeric     2736             0\n16    16   Seasonal_Impact_Score       numeric     2736             0\n17    17     Weekly_Voyage_Count       integer     2736             0\n18    18 Average_Load_Percentage       numeric     2736             0\n   Per_of_Missing No_of_distinct_values\n1               0                    57\n2               0                     5\n3               0                     5\n4               0                     4\n5               0                     4\n6               0                  2736\n7               0                  2736\n8               0                  2736\n9               0                  2736\n10              0                     4\n11              0                  2736\n12              0                  2736\n13              0                  2736\n14              0                  2736\n15              0                  2736\n16              0                  2736\n17              0                     9\n18              0                  2736\n```\n\n\n:::\n:::\n\n\n\n### Glimpse the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check structure\nglimpse(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,736\nColumns: 18\n$ Date                    <chr> \"2023-06-04\", \"2023-06-11\", \"2023-06-18\", \"202…\n$ Ship_Type               <chr> \"Container Ship\", \"Fish Carrier\", \"Container S…\n$ Route_Type              <chr> \"None\", \"Short-haul\", \"Long-haul\", \"Transocean…\n$ Engine_Type             <chr> \"Heavy Fuel Oil (HFO)\", \"Steam Turbine\", \"Dies…\n$ Maintenance_Status      <chr> \"Critical\", \"Good\", \"Fair\", \"Fair\", \"Fair\", \"F…\n$ Speed_Over_Ground_knots <dbl> 12.59756, 10.38758, 20.74975, 21.05510, 13.742…\n$ Engine_Power_kW         <dbl> 2062.9840, 1796.0574, 1648.5567, 915.2618, 108…\n$ Distance_Traveled_nm    <dbl> 1030.9436, 1060.4864, 658.8741, 1126.8225, 144…\n$ Draft_meters            <dbl> 14.132284, 14.653083, 7.199261, 11.789063, 9.7…\n$ Weather_Condition       <chr> \"Moderate\", \"Rough\", \"Moderate\", \"Moderate\", \"…\n$ Cargo_Weight_tons       <dbl> 1959.0179, 162.3947, 178.0409, 1737.3853, 260.…\n$ Operational_Cost_USD    <dbl> 483832.35, 483388.00, 448543.40, 261349.61, 28…\n$ Revenue_per_Voyage_USD  <dbl> 292183.27, 883765.79, 394018.75, 87551.38, 676…\n$ Turnaround_Time_hours   <dbl> 25.86708, 63.24820, 49.41815, 22.40911, 64.158…\n$ Efficiency_nm_per_kWh   <dbl> 1.4551789, 0.2903614, 0.4995945, 0.7029057, 1.…\n$ Seasonal_Impact_Score   <dbl> 1.4156533, 0.8856478, 1.4058132, 1.3707043, 0.…\n$ Weekly_Voyage_Count     <int> 1, 6, 9, 1, 8, 7, 3, 6, 8, 2, 9, 4, 3, 7, 7, 3…\n$ Average_Load_Percentage <dbl> 93.76925, 93.89537, 96.21824, 66.19370, 80.008…\n```\n\n\n:::\n\n```{.r .cell-code}\n# Summary statistics\nskim(ship_data)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |          |\n|:------------------------|:---------|\n|Name                     |ship_data |\n|Number of rows           |2736      |\n|Number of columns        |18        |\n|_______________________  |          |\n|Column type frequency:   |          |\n|character                |6         |\n|numeric                  |12        |\n|________________________ |          |\n|Group variables          |None      |\n\n\n**Variable type: character**\n\n|skim_variable      | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:------------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|Date               |         0|             1|  10|  10|     0|       57|          0|\n|Ship_Type          |         0|             1|   4|  14|     0|        5|          0|\n|Route_Type         |         0|             1|   4|  12|     0|        5|          0|\n|Engine_Type        |         0|             1|   4|  20|     0|        4|          0|\n|Maintenance_Status |         0|             1|   4|   8|     0|        4|          0|\n|Weather_Condition  |         0|             1|   4|   8|     0|        4|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable           | n_missing| complete_rate|      mean|        sd|       p0|       p25|       p50|       p75|      p100|hist  |\n|:-----------------------|---------:|-------------:|---------:|---------:|--------:|---------:|---------:|---------:|---------:|:-----|\n|Speed_Over_Ground_knots |         0|             1|     17.60|      4.31|    10.01|     13.93|     17.71|     21.28|     25.00|▇▇▇▇▇ |\n|Engine_Power_kW         |         0|             1|   1757.61|    717.00|   501.03|   1148.10|   1757.49|   2382.59|   2998.73|▇▇▇▇▇ |\n|Distance_Traveled_nm    |         0|             1|   1036.41|    568.63|    50.43|    548.51|   1037.82|   1540.93|   1998.34|▇▇▇▇▇ |\n|Draft_meters            |         0|             1|      9.93|      2.88|     5.00|      7.44|      9.92|     12.41|     14.99|▇▇▇▇▇ |\n|Cargo_Weight_tons       |         0|             1|   1032.57|    558.70|    50.23|    553.98|   1043.21|   1527.72|   1999.13|▇▇▇▇▇ |\n|Operational_Cost_USD    |         0|             1| 255143.34| 140890.48| 10092.31| 131293.38| 257157.65| 381796.93| 499734.87|▇▇▇▇▇ |\n|Revenue_per_Voyage_USD  |         0|             1| 521362.06| 271211.63| 50351.81| 290346.39| 520176.93| 750072.79| 999916.70|▇▇▇▇▇ |\n|Turnaround_Time_hours   |         0|             1|     41.75|     17.63|    12.02|     26.17|     41.59|     57.36|     71.97|▇▇▇▇▇ |\n|Efficiency_nm_per_kWh   |         0|             1|      0.80|      0.40|     0.10|      0.46|      0.79|      1.15|      1.50|▇▇▇▇▇ |\n|Seasonal_Impact_Score   |         0|             1|      1.00|      0.29|     0.50|      0.76|      1.01|      1.25|      1.50|▇▇▇▇▇ |\n|Weekly_Voyage_Count     |         0|             1|      4.91|      2.60|     1.00|      3.00|      5.00|      7.00|      9.00|▇▇▃▇▇ |\n|Average_Load_Percentage |         0|             1|     75.22|     14.51|    50.01|     62.70|     75.50|     87.72|    100.00|▇▇▇▇▇ |\n\n\n:::\n\n```{.r .cell-code}\n# Check for missing values\ncolSums(is.na(ship_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                   Date               Ship_Type              Route_Type \n                      0                       0                       0 \n            Engine_Type      Maintenance_Status Speed_Over_Ground_knots \n                      0                       0                       0 \n        Engine_Power_kW    Distance_Traveled_nm            Draft_meters \n                      0                       0                       0 \n      Weather_Condition       Cargo_Weight_tons    Operational_Cost_USD \n                      0                       0                       0 \n Revenue_per_Voyage_USD   Turnaround_Time_hours   Efficiency_nm_per_kWh \n                      0                       0                       0 \n  Seasonal_Impact_Score     Weekly_Voyage_Count Average_Load_Percentage \n                      0                       0                       0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Check for duplicates\nsum(duplicated(ship_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n### Inspect Unique Values of Categorical Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify columns that are character or factor\ncat_cols <- sapply(ship_data, function(x) is.character(x) || is.factor(x))\n\n# Create a vector of categorical column names, excluding \"Date\"\ncat_cols_no_date <- setdiff(names(ship_data)[cat_cols], \"Date\")\n\n# Loop over those categorical columns (excluding \"Date\")\nfor (col_name in cat_cols_no_date) {\n  cat(\"\\n----------------------------------------\\n\")\n  cat(\"COLUMN:\", col_name, \"\\n\")\n  cat(\"----------------------------------------\\n\")\n  \n  # Show the unique values\n  print(unique(ship_data[[col_name]]))\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n----------------------------------------\nCOLUMN: Ship_Type \n----------------------------------------\n[1] \"Container Ship\" \"Fish Carrier\"   \"Bulk Carrier\"   \"None\"          \n[5] \"Tanker\"        \n\n----------------------------------------\nCOLUMN: Route_Type \n----------------------------------------\n[1] \"None\"         \"Short-haul\"   \"Long-haul\"    \"Transoceanic\" \"Coastal\"     \n\n----------------------------------------\nCOLUMN: Engine_Type \n----------------------------------------\n[1] \"Heavy Fuel Oil (HFO)\" \"Steam Turbine\"        \"Diesel\"              \n[4] \"None\"                \n\n----------------------------------------\nCOLUMN: Maintenance_Status \n----------------------------------------\n[1] \"Critical\" \"Good\"     \"Fair\"     \"None\"    \n\n----------------------------------------\nCOLUMN: Weather_Condition \n----------------------------------------\n[1] \"Moderate\" \"Rough\"    \"Calm\"     \"None\"    \n```\n\n\n:::\n:::\n\n\n\n### Checking for value=\"None\" in Categorical Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n##| code-fold: true\n##| echo: false\n##| eval: false\n\n# Identify categorical columns (character or factor)\ncat_cols <- sapply(ship_data, function(x) is.character(x) || is.factor(x))\n\n# Count the number of \"None\" in each row for those columns\nnone_counts <- apply(ship_data[, cat_cols], 1, function(x) sum(x == \"None\", na.rm = TRUE))\n\n# Create a summary data frame of counts\nsummary_counts <- data.frame(\n  Category = c(\"one None\", \"two None\", \"three None\", \"more than three None\"),\n  Count = c(\n    sum(none_counts == 1),\n    sum(none_counts == 2),\n    sum(none_counts == 3),\n    sum(none_counts > 3)\n  )\n)\n\n# Print the summary table with a heading\nprint(\"## Summary of 'None' Counts\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"## Summary of 'None' Counts\"\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary_counts %>%\n  kable(\"html\", caption = \"Summary of rows by number of 'None'\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Summary of rows by number of 'None'</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Category </th>\n   <th style=\"text-align:right;\"> Count </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> one None </td>\n   <td style=\"text-align:right;\"> 540 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> two None </td>\n   <td style=\"text-align:right;\"> 68 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> three None </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> more than three None </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# Subset rows based on the number of \"None\"\ndf_one_none   <- ship_data[none_counts == 1, ]\ndf_two_none   <- ship_data[none_counts == 2, ]\ndf_three_none <- ship_data[none_counts == 3, ]\ndf_four_plus  <- ship_data[none_counts >= 4, ]\n\n# Top 10 rows with exactly one \"None\"\ncat(\"\\n## Top 10 Rows with exactly one 'None'\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n## Top 10 Rows with exactly one 'None'\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_one_none %>%\n  head(10) %>%\n  kable(\"html\", caption = \"Top 10 rows with exactly one 'None'\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Top 10 rows with exactly one 'None'</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 1 </td>\n   <td style=\"text-align:left;\"> 2023-06-04 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 12.59756 </td>\n   <td style=\"text-align:right;\"> 2062.9840 </td>\n   <td style=\"text-align:right;\"> 1030.9436 </td>\n   <td style=\"text-align:right;\"> 14.132284 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1959.01788 </td>\n   <td style=\"text-align:right;\"> 483832.35 </td>\n   <td style=\"text-align:right;\"> 292183.3 </td>\n   <td style=\"text-align:right;\"> 25.86708 </td>\n   <td style=\"text-align:right;\"> 1.4551789 </td>\n   <td style=\"text-align:right;\"> 1.4156533 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 93.76925 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 9 </td>\n   <td style=\"text-align:left;\"> 2023-07-30 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 17.30936 </td>\n   <td style=\"text-align:right;\"> 1179.0188 </td>\n   <td style=\"text-align:right;\"> 429.5643 </td>\n   <td style=\"text-align:right;\"> 6.002358 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1953.44793 </td>\n   <td style=\"text-align:right;\"> 346071.52 </td>\n   <td style=\"text-align:right;\"> 448682.9 </td>\n   <td style=\"text-align:right;\"> 14.45182 </td>\n   <td style=\"text-align:right;\"> 0.9774483 </td>\n   <td style=\"text-align:right;\"> 0.7649141 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 50.24706 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 16 </td>\n   <td style=\"text-align:left;\"> 2023-09-17 </td>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 15.08722 </td>\n   <td style=\"text-align:right;\"> 578.8929 </td>\n   <td style=\"text-align:right;\"> 1932.2131 </td>\n   <td style=\"text-align:right;\"> 12.998270 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 403.85428 </td>\n   <td style=\"text-align:right;\"> 424860.57 </td>\n   <td style=\"text-align:right;\"> 633712.5 </td>\n   <td style=\"text-align:right;\"> 68.22836 </td>\n   <td style=\"text-align:right;\"> 0.6526741 </td>\n   <td style=\"text-align:right;\"> 1.3086865 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 74.51022 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 21 </td>\n   <td style=\"text-align:left;\"> 2023-10-22 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 23.80385 </td>\n   <td style=\"text-align:right;\"> 1120.6992 </td>\n   <td style=\"text-align:right;\"> 1169.4785 </td>\n   <td style=\"text-align:right;\"> 10.544799 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1084.25559 </td>\n   <td style=\"text-align:right;\"> 377335.18 </td>\n   <td style=\"text-align:right;\"> 371301.2 </td>\n   <td style=\"text-align:right;\"> 57.59360 </td>\n   <td style=\"text-align:right;\"> 1.2623670 </td>\n   <td style=\"text-align:right;\"> 1.4179010 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 83.44323 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 22 </td>\n   <td style=\"text-align:left;\"> 2023-10-29 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 22.76036 </td>\n   <td style=\"text-align:right;\"> 2335.2629 </td>\n   <td style=\"text-align:right;\"> 1461.9175 </td>\n   <td style=\"text-align:right;\"> 7.980762 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1100.96855 </td>\n   <td style=\"text-align:right;\"> 441952.08 </td>\n   <td style=\"text-align:right;\"> 666766.9 </td>\n   <td style=\"text-align:right;\"> 35.56856 </td>\n   <td style=\"text-align:right;\"> 1.0500736 </td>\n   <td style=\"text-align:right;\"> 0.8750325 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 92.18716 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 23 </td>\n   <td style=\"text-align:left;\"> 2023-11-05 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 18.75487 </td>\n   <td style=\"text-align:right;\"> 1305.4237 </td>\n   <td style=\"text-align:right;\"> 354.5997 </td>\n   <td style=\"text-align:right;\"> 8.052450 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1725.68777 </td>\n   <td style=\"text-align:right;\"> 14878.15 </td>\n   <td style=\"text-align:right;\"> 902159.4 </td>\n   <td style=\"text-align:right;\"> 31.40658 </td>\n   <td style=\"text-align:right;\"> 0.9300016 </td>\n   <td style=\"text-align:right;\"> 0.8647717 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 89.54613 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 25 </td>\n   <td style=\"text-align:left;\"> 2023-11-19 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 18.06901 </td>\n   <td style=\"text-align:right;\"> 2922.2826 </td>\n   <td style=\"text-align:right;\"> 559.8613 </td>\n   <td style=\"text-align:right;\"> 10.417704 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1741.08102 </td>\n   <td style=\"text-align:right;\"> 333900.58 </td>\n   <td style=\"text-align:right;\"> 848139.3 </td>\n   <td style=\"text-align:right;\"> 20.00624 </td>\n   <td style=\"text-align:right;\"> 0.6995534 </td>\n   <td style=\"text-align:right;\"> 1.1646948 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 58.54123 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 27 </td>\n   <td style=\"text-align:left;\"> 2023-12-03 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 20.99496 </td>\n   <td style=\"text-align:right;\"> 2296.3298 </td>\n   <td style=\"text-align:right;\"> 275.1871 </td>\n   <td style=\"text-align:right;\"> 7.124895 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 53.51655 </td>\n   <td style=\"text-align:right;\"> 114527.88 </td>\n   <td style=\"text-align:right;\"> 506111.0 </td>\n   <td style=\"text-align:right;\"> 52.77458 </td>\n   <td style=\"text-align:right;\"> 0.2432706 </td>\n   <td style=\"text-align:right;\"> 0.7576879 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 66.67839 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 33 </td>\n   <td style=\"text-align:left;\"> 2024-01-14 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 18.05569 </td>\n   <td style=\"text-align:right;\"> 2940.9806 </td>\n   <td style=\"text-align:right;\"> 1674.0561 </td>\n   <td style=\"text-align:right;\"> 14.255468 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 965.73890 </td>\n   <td style=\"text-align:right;\"> 68846.08 </td>\n   <td style=\"text-align:right;\"> 124317.1 </td>\n   <td style=\"text-align:right;\"> 45.59025 </td>\n   <td style=\"text-align:right;\"> 0.5819657 </td>\n   <td style=\"text-align:right;\"> 0.9658151 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 79.69627 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 46 </td>\n   <td style=\"text-align:left;\"> 2024-04-14 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 22.36635 </td>\n   <td style=\"text-align:right;\"> 2814.3636 </td>\n   <td style=\"text-align:right;\"> 961.8204 </td>\n   <td style=\"text-align:right;\"> 5.728426 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 105.61721 </td>\n   <td style=\"text-align:right;\"> 400472.42 </td>\n   <td style=\"text-align:right;\"> 183054.9 </td>\n   <td style=\"text-align:right;\"> 28.29324 </td>\n   <td style=\"text-align:right;\"> 1.2339394 </td>\n   <td style=\"text-align:right;\"> 0.9573110 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 78.74450 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# Top 10 rows with exactly two \"None\"\ncat(\"\\n## Top 10 Rows with exactly two 'None'\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n## Top 10 Rows with exactly two 'None'\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_two_none %>%\n  head(10) %>%\n  kable(\"html\", caption = \"Top 10 rows with exactly two 'None'\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Top 10 rows with exactly two 'None'</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 43 </td>\n   <td style=\"text-align:left;\"> 2024-03-24 </td>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 19.08942 </td>\n   <td style=\"text-align:right;\"> 1095.2398 </td>\n   <td style=\"text-align:right;\"> 1801.1749 </td>\n   <td style=\"text-align:right;\"> 14.086731 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 858.1013 </td>\n   <td style=\"text-align:right;\"> 70720.33 </td>\n   <td style=\"text-align:right;\"> 382123.59 </td>\n   <td style=\"text-align:right;\"> 66.85377 </td>\n   <td style=\"text-align:right;\"> 0.7762076 </td>\n   <td style=\"text-align:right;\"> 0.7934013 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 85.87867 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 129 </td>\n   <td style=\"text-align:left;\"> 2023-09-10 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 22.70870 </td>\n   <td style=\"text-align:right;\"> 1512.1199 </td>\n   <td style=\"text-align:right;\"> 771.3406 </td>\n   <td style=\"text-align:right;\"> 9.854360 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 1580.1024 </td>\n   <td style=\"text-align:right;\"> 226899.21 </td>\n   <td style=\"text-align:right;\"> 286758.26 </td>\n   <td style=\"text-align:right;\"> 39.56307 </td>\n   <td style=\"text-align:right;\"> 0.8514023 </td>\n   <td style=\"text-align:right;\"> 0.8086902 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 90.61944 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 135 </td>\n   <td style=\"text-align:left;\"> 2023-10-22 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 14.64564 </td>\n   <td style=\"text-align:right;\"> 2605.7648 </td>\n   <td style=\"text-align:right;\"> 1714.8680 </td>\n   <td style=\"text-align:right;\"> 11.434511 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 682.6991 </td>\n   <td style=\"text-align:right;\"> 439967.19 </td>\n   <td style=\"text-align:right;\"> 51708.41 </td>\n   <td style=\"text-align:right;\"> 55.27975 </td>\n   <td style=\"text-align:right;\"> 0.5330556 </td>\n   <td style=\"text-align:right;\"> 1.3134256 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 58.93742 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 199 </td>\n   <td style=\"text-align:left;\"> 2023-12-10 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 12.25630 </td>\n   <td style=\"text-align:right;\"> 568.2896 </td>\n   <td style=\"text-align:right;\"> 495.4977 </td>\n   <td style=\"text-align:right;\"> 11.859816 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 983.0555 </td>\n   <td style=\"text-align:right;\"> 28916.94 </td>\n   <td style=\"text-align:right;\"> 93070.13 </td>\n   <td style=\"text-align:right;\"> 16.16368 </td>\n   <td style=\"text-align:right;\"> 1.1969162 </td>\n   <td style=\"text-align:right;\"> 0.7416365 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 77.79094 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 219 </td>\n   <td style=\"text-align:left;\"> 2024-04-28 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 10.36508 </td>\n   <td style=\"text-align:right;\"> 1195.3456 </td>\n   <td style=\"text-align:right;\"> 247.0565 </td>\n   <td style=\"text-align:right;\"> 12.560964 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1098.1778 </td>\n   <td style=\"text-align:right;\"> 22233.31 </td>\n   <td style=\"text-align:right;\"> 956502.65 </td>\n   <td style=\"text-align:right;\"> 61.08365 </td>\n   <td style=\"text-align:right;\"> 0.7352781 </td>\n   <td style=\"text-align:right;\"> 1.4287733 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 64.02880 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 237 </td>\n   <td style=\"text-align:left;\"> 2023-07-30 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 17.07090 </td>\n   <td style=\"text-align:right;\"> 942.9747 </td>\n   <td style=\"text-align:right;\"> 913.1115 </td>\n   <td style=\"text-align:right;\"> 14.485655 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 670.6977 </td>\n   <td style=\"text-align:right;\"> 64542.63 </td>\n   <td style=\"text-align:right;\"> 674707.58 </td>\n   <td style=\"text-align:right;\"> 30.82242 </td>\n   <td style=\"text-align:right;\"> 1.2258682 </td>\n   <td style=\"text-align:right;\"> 1.3498214 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 52.63198 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 313 </td>\n   <td style=\"text-align:left;\"> 2023-12-10 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 17.40898 </td>\n   <td style=\"text-align:right;\"> 2825.2216 </td>\n   <td style=\"text-align:right;\"> 1041.7341 </td>\n   <td style=\"text-align:right;\"> 13.799273 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 734.6318 </td>\n   <td style=\"text-align:right;\"> 148151.46 </td>\n   <td style=\"text-align:right;\"> 511022.91 </td>\n   <td style=\"text-align:right;\"> 34.72301 </td>\n   <td style=\"text-align:right;\"> 1.0832695 </td>\n   <td style=\"text-align:right;\"> 0.6020035 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 77.50350 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 363 </td>\n   <td style=\"text-align:left;\"> 2023-10-22 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 18.56602 </td>\n   <td style=\"text-align:right;\"> 1517.0135 </td>\n   <td style=\"text-align:right;\"> 1852.6289 </td>\n   <td style=\"text-align:right;\"> 6.763938 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 173.3641 </td>\n   <td style=\"text-align:right;\"> 434573.62 </td>\n   <td style=\"text-align:right;\"> 68749.02 </td>\n   <td style=\"text-align:right;\"> 58.12002 </td>\n   <td style=\"text-align:right;\"> 0.6350226 </td>\n   <td style=\"text-align:right;\"> 0.5587151 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 56.58473 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 374 </td>\n   <td style=\"text-align:left;\"> 2024-01-07 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 10.51714 </td>\n   <td style=\"text-align:right;\"> 1297.5769 </td>\n   <td style=\"text-align:right;\"> 510.8005 </td>\n   <td style=\"text-align:right;\"> 12.882525 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 281.7490 </td>\n   <td style=\"text-align:right;\"> 251675.04 </td>\n   <td style=\"text-align:right;\"> 663243.69 </td>\n   <td style=\"text-align:right;\"> 16.96124 </td>\n   <td style=\"text-align:right;\"> 1.2928879 </td>\n   <td style=\"text-align:right;\"> 1.0353919 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 90.38808 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 399 </td>\n   <td style=\"text-align:left;\"> 2024-06-30 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 21.33223 </td>\n   <td style=\"text-align:right;\"> 717.1855 </td>\n   <td style=\"text-align:right;\"> 697.4926 </td>\n   <td style=\"text-align:right;\"> 12.962534 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 402.5453 </td>\n   <td style=\"text-align:right;\"> 99466.25 </td>\n   <td style=\"text-align:right;\"> 98243.61 </td>\n   <td style=\"text-align:right;\"> 29.22883 </td>\n   <td style=\"text-align:right;\"> 0.5953693 </td>\n   <td style=\"text-align:right;\"> 0.8140546 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 73.37483 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# Top 10 rows with exactly three \"None\"\ncat(\"\\n## Top 10 Rows with exactly three 'None'\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n## Top 10 Rows with exactly three 'None'\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_three_none %>%\n  head(10) %>%\n  kable(\"html\", caption = \"Top 10 rows with exactly three 'None'\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Top 10 rows with exactly three 'None'</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n\n```{.r .cell-code}\n# All rows with four or more \"None\"\ncat(\"\\n## Rows with four or more 'None'\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n## Rows with four or more 'None'\n```\n\n\n:::\n\n```{.r .cell-code}\ndf_four_plus %>%\n  kable(\"html\", caption = \"Rows with four or more 'None'\") %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"), full_width = FALSE)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n<caption>Rows with four or more 'None'</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 197 </td>\n   <td style=\"text-align:left;\"> 2023-11-26 </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:left;\"> None </td>\n   <td style=\"text-align:right;\"> 11.12406 </td>\n   <td style=\"text-align:right;\"> 1493.909 </td>\n   <td style=\"text-align:right;\"> 1279.969 </td>\n   <td style=\"text-align:right;\"> 11.59002 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1515.524 </td>\n   <td style=\"text-align:right;\"> 317587.4 </td>\n   <td style=\"text-align:right;\"> 583011.8 </td>\n   <td style=\"text-align:right;\"> 29.87684 </td>\n   <td style=\"text-align:right;\"> 0.1989973 </td>\n   <td style=\"text-align:right;\"> 0.9338018 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 82.86563 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Removing Rows with None in the Categorical Columns\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify categorical columns (character or factor)\ncat_cols <- sapply(ship_data, function(x) is.character(x) || is.factor(x))\n\n# Store the number of rows before filtering\nnum_rows_before <- nrow(ship_data)\n\n# Remove rows where ANY categorical column contains \"None\"\nship_data_clean <- ship_data %>%\n  filter(!rowSums(across(which(cat_cols), ~ . == \"None\")) > 0)\n\n# Store the number of rows after filtering\nnum_rows_after <- nrow(ship_data_clean)\n\n# Calculate how many rows were deleted\nrows_deleted <- num_rows_before - num_rows_after\n\n# Print summary\ncat(\"\\n## Summary of Rows Deleted\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n## Summary of Rows Deleted\n```\n\n\n:::\n\n```{.r .cell-code}\ncat(\"Total rows removed:\", rows_deleted, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTotal rows removed: 609 \n```\n\n\n:::\n\n```{.r .cell-code}\n# Glimpse the cleaned data\nship_data <- ship_data_clean\n# glimpse(ship_data)\n\nship_data %>%\n  head(10) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-11 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 10.38758 </td>\n   <td style=\"text-align:right;\"> 1796.0574 </td>\n   <td style=\"text-align:right;\"> 1060.4864 </td>\n   <td style=\"text-align:right;\"> 14.653083 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 162.3947 </td>\n   <td style=\"text-align:right;\"> 483388.0 </td>\n   <td style=\"text-align:right;\"> 883765.79 </td>\n   <td style=\"text-align:right;\"> 63.24820 </td>\n   <td style=\"text-align:right;\"> 0.2903614 </td>\n   <td style=\"text-align:right;\"> 0.8856478 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 93.89537 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-18 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 20.74975 </td>\n   <td style=\"text-align:right;\"> 1648.5567 </td>\n   <td style=\"text-align:right;\"> 658.8741 </td>\n   <td style=\"text-align:right;\"> 7.199261 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 178.0409 </td>\n   <td style=\"text-align:right;\"> 448543.4 </td>\n   <td style=\"text-align:right;\"> 394018.75 </td>\n   <td style=\"text-align:right;\"> 49.41815 </td>\n   <td style=\"text-align:right;\"> 0.4995945 </td>\n   <td style=\"text-align:right;\"> 1.4058132 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 96.21824 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-25 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 21.05510 </td>\n   <td style=\"text-align:right;\"> 915.2618 </td>\n   <td style=\"text-align:right;\"> 1126.8225 </td>\n   <td style=\"text-align:right;\"> 11.789062 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1737.3853 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 22.40911 </td>\n   <td style=\"text-align:right;\"> 0.7029057 </td>\n   <td style=\"text-align:right;\"> 1.3707043 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 66.19370 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-02 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 13.74278 </td>\n   <td style=\"text-align:right;\"> 1089.7218 </td>\n   <td style=\"text-align:right;\"> 1445.2812 </td>\n   <td style=\"text-align:right;\"> 9.727833 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 260.5951 </td>\n   <td style=\"text-align:right;\"> 287718.4 </td>\n   <td style=\"text-align:right;\"> 676121.46 </td>\n   <td style=\"text-align:right;\"> 64.15823 </td>\n   <td style=\"text-align:right;\"> 1.3313431 </td>\n   <td style=\"text-align:right;\"> 0.5833834 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 80.00858 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-09 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 18.61620 </td>\n   <td style=\"text-align:right;\"> 2171.6466 </td>\n   <td style=\"text-align:right;\"> 723.3042 </td>\n   <td style=\"text-align:right;\"> 14.916320 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1912.5098 </td>\n   <td style=\"text-align:right;\"> 184569.0 </td>\n   <td style=\"text-align:right;\"> 776698.35 </td>\n   <td style=\"text-align:right;\"> 47.47615 </td>\n   <td style=\"text-align:right;\"> 1.3702060 </td>\n   <td style=\"text-align:right;\"> 1.4377250 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 53.17490 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-16 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 20.43312 </td>\n   <td style=\"text-align:right;\"> 2505.0435 </td>\n   <td style=\"text-align:right;\"> 270.1186 </td>\n   <td style=\"text-align:right;\"> 8.455264 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1191.4364 </td>\n   <td style=\"text-align:right;\"> 434449.3 </td>\n   <td style=\"text-align:right;\"> 739431.83 </td>\n   <td style=\"text-align:right;\"> 29.04042 </td>\n   <td style=\"text-align:right;\"> 1.1203894 </td>\n   <td style=\"text-align:right;\"> 0.6029316 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 58.50864 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-23 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 23.49805 </td>\n   <td style=\"text-align:right;\"> 814.8065 </td>\n   <td style=\"text-align:right;\"> 1717.3284 </td>\n   <td style=\"text-align:right;\"> 9.283780 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 318.4493 </td>\n   <td style=\"text-align:right;\"> 348380.6 </td>\n   <td style=\"text-align:right;\"> 462211.40 </td>\n   <td style=\"text-align:right;\"> 52.47860 </td>\n   <td style=\"text-align:right;\"> 0.6959746 </td>\n   <td style=\"text-align:right;\"> 1.4086634 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 94.59197 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-06 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 23.22710 </td>\n   <td style=\"text-align:right;\"> 2685.4017 </td>\n   <td style=\"text-align:right;\"> 1588.7923 </td>\n   <td style=\"text-align:right;\"> 11.721261 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1843.4383 </td>\n   <td style=\"text-align:right;\"> 149790.2 </td>\n   <td style=\"text-align:right;\"> 615230.86 </td>\n   <td style=\"text-align:right;\"> 63.74276 </td>\n   <td style=\"text-align:right;\"> 0.4406762 </td>\n   <td style=\"text-align:right;\"> 1.4355687 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 79.45133 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-13 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 11.63511 </td>\n   <td style=\"text-align:right;\"> 2522.6972 </td>\n   <td style=\"text-align:right;\"> 1224.8463 </td>\n   <td style=\"text-align:right;\"> 10.900540 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1130.6046 </td>\n   <td style=\"text-align:right;\"> 299189.3 </td>\n   <td style=\"text-align:right;\"> 749334.91 </td>\n   <td style=\"text-align:right;\"> 47.66533 </td>\n   <td style=\"text-align:right;\"> 0.4378355 </td>\n   <td style=\"text-align:right;\"> 1.1052602 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 70.50445 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-20 </td>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 18.25358 </td>\n   <td style=\"text-align:right;\"> 2129.5179 </td>\n   <td style=\"text-align:right;\"> 1311.9786 </td>\n   <td style=\"text-align:right;\"> 11.955648 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 441.2600 </td>\n   <td style=\"text-align:right;\"> 481866.3 </td>\n   <td style=\"text-align:right;\"> 738063.17 </td>\n   <td style=\"text-align:right;\"> 48.18567 </td>\n   <td style=\"text-align:right;\"> 1.2270642 </td>\n   <td style=\"text-align:right;\"> 0.9414481 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 65.98470 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## New Variables Created for Analysis\n\nBy adding these new variables—such as net profit per voyage, weekly totals for profit, revenue, and cost, as well as profit per nautical mile (NM) and per ton—we gain a clearer, more granular perspective on each voyage’s financial performance and operational efficiency. Net profit and weekly totals help reveal whether repeating a given voyage multiple times amplifies gains or losses, while profit margin captures the relative profitability regardless of absolute cost or revenue scale. Metrics like cost per NM, revenue per NM, and profit per NM clarify how well resources are being utilized across varying distances, and analyzing cost, revenue, and profit per ton provides insight into cargo handling efficiency. Altogether, these derived columns facilitate a richer, data‐driven understanding of route profitability, capacity utilization, and operational strategy—essential for making informed decisions in shipping performance analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  mutate(\n    # Net profit per voyage\n    Net_Profit = Revenue_per_Voyage_USD - Operational_Cost_USD,\n    \n    # Weekly total profit = net profit * weekly voyage count\n    Weekly_Total_Profit = Net_Profit * Weekly_Voyage_Count,\n    \n    # Profit margin (per voyage)\n    Profit_Margin = Net_Profit / Revenue_per_Voyage_USD,\n    \n    # Weekly totals for revenue and cost\n    Weekly_Total_Revenue = Revenue_per_Voyage_USD * Weekly_Voyage_Count,\n    Weekly_Total_Operational_Cost = Operational_Cost_USD * Weekly_Voyage_Count,\n    \n    # Cost per NM, Revenue per NM\n    Cost_per_NM = Operational_Cost_USD / Distance_Traveled_nm,\n    Revenue_per_NM = Revenue_per_Voyage_USD / Distance_Traveled_nm,\n    \n    # Additional variables requested\n    Profit_per_NM     = (Revenue_per_Voyage_USD - Operational_Cost_USD) / Distance_Traveled_nm,\n    Cost_per_Ton      = Operational_Cost_USD / Cargo_Weight_tons,\n    Revenue_per_Ton   = Revenue_per_Voyage_USD / Cargo_Weight_tons,\n    Profit_per_Ton    = (Revenue_per_Voyage_USD - Operational_Cost_USD) / Cargo_Weight_tons\n  )\n\n# Quick check of the new columns\n# glimpse(ship_data)\nship_data %>%\n  head(10) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n   <th style=\"text-align:right;\"> Net_Profit </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Profit </th>\n   <th style=\"text-align:right;\"> Profit_Margin </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Revenue </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Operational_Cost </th>\n   <th style=\"text-align:right;\"> Cost_per_NM </th>\n   <th style=\"text-align:right;\"> Revenue_per_NM </th>\n   <th style=\"text-align:right;\"> Profit_per_NM </th>\n   <th style=\"text-align:right;\"> Cost_per_Ton </th>\n   <th style=\"text-align:right;\"> Revenue_per_Ton </th>\n   <th style=\"text-align:right;\"> Profit_per_Ton </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-11 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 10.38758 </td>\n   <td style=\"text-align:right;\"> 1796.0574 </td>\n   <td style=\"text-align:right;\"> 1060.4864 </td>\n   <td style=\"text-align:right;\"> 14.653083 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 162.3947 </td>\n   <td style=\"text-align:right;\"> 483388.0 </td>\n   <td style=\"text-align:right;\"> 883765.79 </td>\n   <td style=\"text-align:right;\"> 63.24820 </td>\n   <td style=\"text-align:right;\"> 0.2903614 </td>\n   <td style=\"text-align:right;\"> 0.8856478 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 93.89537 </td>\n   <td style=\"text-align:right;\"> 400377.79 </td>\n   <td style=\"text-align:right;\"> 2402266.7 </td>\n   <td style=\"text-align:right;\"> 0.4530361 </td>\n   <td style=\"text-align:right;\"> 5302594.72 </td>\n   <td style=\"text-align:right;\"> 2900328.0 </td>\n   <td style=\"text-align:right;\"> 455.81726 </td>\n   <td style=\"text-align:right;\"> 833.35892 </td>\n   <td style=\"text-align:right;\"> 377.54166 </td>\n   <td style=\"text-align:right;\"> 2976.62403 </td>\n   <td style=\"text-align:right;\"> 5442.08478 </td>\n   <td style=\"text-align:right;\"> 2465.4607 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-18 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 20.74975 </td>\n   <td style=\"text-align:right;\"> 1648.5567 </td>\n   <td style=\"text-align:right;\"> 658.8741 </td>\n   <td style=\"text-align:right;\"> 7.199261 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 178.0409 </td>\n   <td style=\"text-align:right;\"> 448543.4 </td>\n   <td style=\"text-align:right;\"> 394018.75 </td>\n   <td style=\"text-align:right;\"> 49.41815 </td>\n   <td style=\"text-align:right;\"> 0.4995945 </td>\n   <td style=\"text-align:right;\"> 1.4058132 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 96.21824 </td>\n   <td style=\"text-align:right;\"> -54524.66 </td>\n   <td style=\"text-align:right;\"> -490721.9 </td>\n   <td style=\"text-align:right;\"> -0.1383809 </td>\n   <td style=\"text-align:right;\"> 3546168.72 </td>\n   <td style=\"text-align:right;\"> 4036890.6 </td>\n   <td style=\"text-align:right;\"> 680.77251 </td>\n   <td style=\"text-align:right;\"> 598.01823 </td>\n   <td style=\"text-align:right;\"> -82.75428 </td>\n   <td style=\"text-align:right;\"> 2519.32765 </td>\n   <td style=\"text-align:right;\"> 2213.07975 </td>\n   <td style=\"text-align:right;\"> -306.2479 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-25 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 21.05510 </td>\n   <td style=\"text-align:right;\"> 915.2618 </td>\n   <td style=\"text-align:right;\"> 1126.8225 </td>\n   <td style=\"text-align:right;\"> 11.789062 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1737.3853 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 22.40911 </td>\n   <td style=\"text-align:right;\"> 0.7029057 </td>\n   <td style=\"text-align:right;\"> 1.3707043 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 66.19370 </td>\n   <td style=\"text-align:right;\"> -173798.23 </td>\n   <td style=\"text-align:right;\"> -173798.2 </td>\n   <td style=\"text-align:right;\"> -1.9850999 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 231.93502 </td>\n   <td style=\"text-align:right;\"> 77.69757 </td>\n   <td style=\"text-align:right;\"> -154.23745 </td>\n   <td style=\"text-align:right;\"> 150.42697 </td>\n   <td style=\"text-align:right;\"> 50.39261 </td>\n   <td style=\"text-align:right;\"> -100.0344 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-02 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 13.74278 </td>\n   <td style=\"text-align:right;\"> 1089.7218 </td>\n   <td style=\"text-align:right;\"> 1445.2812 </td>\n   <td style=\"text-align:right;\"> 9.727833 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 260.5951 </td>\n   <td style=\"text-align:right;\"> 287718.4 </td>\n   <td style=\"text-align:right;\"> 676121.46 </td>\n   <td style=\"text-align:right;\"> 64.15823 </td>\n   <td style=\"text-align:right;\"> 1.3313431 </td>\n   <td style=\"text-align:right;\"> 0.5833834 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 80.00858 </td>\n   <td style=\"text-align:right;\"> 388403.08 </td>\n   <td style=\"text-align:right;\"> 3107224.7 </td>\n   <td style=\"text-align:right;\"> 0.5744576 </td>\n   <td style=\"text-align:right;\"> 5408971.68 </td>\n   <td style=\"text-align:right;\"> 2301747.0 </td>\n   <td style=\"text-align:right;\"> 199.07433 </td>\n   <td style=\"text-align:right;\"> 467.81310 </td>\n   <td style=\"text-align:right;\"> 268.73877 </td>\n   <td style=\"text-align:right;\"> 1104.08205 </td>\n   <td style=\"text-align:right;\"> 2594.52864 </td>\n   <td style=\"text-align:right;\"> 1490.4466 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-09 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 18.61620 </td>\n   <td style=\"text-align:right;\"> 2171.6466 </td>\n   <td style=\"text-align:right;\"> 723.3042 </td>\n   <td style=\"text-align:right;\"> 14.916320 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1912.5098 </td>\n   <td style=\"text-align:right;\"> 184569.0 </td>\n   <td style=\"text-align:right;\"> 776698.35 </td>\n   <td style=\"text-align:right;\"> 47.47615 </td>\n   <td style=\"text-align:right;\"> 1.3702060 </td>\n   <td style=\"text-align:right;\"> 1.4377250 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 53.17490 </td>\n   <td style=\"text-align:right;\"> 592129.31 </td>\n   <td style=\"text-align:right;\"> 4144905.2 </td>\n   <td style=\"text-align:right;\"> 0.7623671 </td>\n   <td style=\"text-align:right;\"> 5436888.48 </td>\n   <td style=\"text-align:right;\"> 1291983.3 </td>\n   <td style=\"text-align:right;\"> 255.17485 </td>\n   <td style=\"text-align:right;\"> 1073.81976 </td>\n   <td style=\"text-align:right;\"> 818.64490 </td>\n   <td style=\"text-align:right;\"> 96.50620 </td>\n   <td style=\"text-align:right;\"> 406.11472 </td>\n   <td style=\"text-align:right;\"> 309.6085 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-16 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 20.43312 </td>\n   <td style=\"text-align:right;\"> 2505.0435 </td>\n   <td style=\"text-align:right;\"> 270.1186 </td>\n   <td style=\"text-align:right;\"> 8.455264 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1191.4364 </td>\n   <td style=\"text-align:right;\"> 434449.3 </td>\n   <td style=\"text-align:right;\"> 739431.83 </td>\n   <td style=\"text-align:right;\"> 29.04042 </td>\n   <td style=\"text-align:right;\"> 1.1203894 </td>\n   <td style=\"text-align:right;\"> 0.6029316 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 58.50864 </td>\n   <td style=\"text-align:right;\"> 304982.56 </td>\n   <td style=\"text-align:right;\"> 914947.7 </td>\n   <td style=\"text-align:right;\"> 0.4124553 </td>\n   <td style=\"text-align:right;\"> 2218295.48 </td>\n   <td style=\"text-align:right;\"> 1303347.8 </td>\n   <td style=\"text-align:right;\"> 1608.36493 </td>\n   <td style=\"text-align:right;\"> 2737.43407 </td>\n   <td style=\"text-align:right;\"> 1129.06914 </td>\n   <td style=\"text-align:right;\"> 364.64326 </td>\n   <td style=\"text-align:right;\"> 620.62215 </td>\n   <td style=\"text-align:right;\"> 255.9789 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-23 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 23.49805 </td>\n   <td style=\"text-align:right;\"> 814.8065 </td>\n   <td style=\"text-align:right;\"> 1717.3284 </td>\n   <td style=\"text-align:right;\"> 9.283780 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 318.4493 </td>\n   <td style=\"text-align:right;\"> 348380.6 </td>\n   <td style=\"text-align:right;\"> 462211.40 </td>\n   <td style=\"text-align:right;\"> 52.47860 </td>\n   <td style=\"text-align:right;\"> 0.6959746 </td>\n   <td style=\"text-align:right;\"> 1.4086634 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 94.59197 </td>\n   <td style=\"text-align:right;\"> 113830.79 </td>\n   <td style=\"text-align:right;\"> 682984.8 </td>\n   <td style=\"text-align:right;\"> 0.2462743 </td>\n   <td style=\"text-align:right;\"> 2773268.41 </td>\n   <td style=\"text-align:right;\"> 2090283.6 </td>\n   <td style=\"text-align:right;\"> 202.86196 </td>\n   <td style=\"text-align:right;\"> 269.14561 </td>\n   <td style=\"text-align:right;\"> 66.28365 </td>\n   <td style=\"text-align:right;\"> 1093.99093 </td>\n   <td style=\"text-align:right;\"> 1451.44440 </td>\n   <td style=\"text-align:right;\"> 357.4535 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-06 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 23.22710 </td>\n   <td style=\"text-align:right;\"> 2685.4017 </td>\n   <td style=\"text-align:right;\"> 1588.7923 </td>\n   <td style=\"text-align:right;\"> 11.721261 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1843.4383 </td>\n   <td style=\"text-align:right;\"> 149790.2 </td>\n   <td style=\"text-align:right;\"> 615230.86 </td>\n   <td style=\"text-align:right;\"> 63.74276 </td>\n   <td style=\"text-align:right;\"> 0.4406762 </td>\n   <td style=\"text-align:right;\"> 1.4355687 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 79.45133 </td>\n   <td style=\"text-align:right;\"> 465440.65 </td>\n   <td style=\"text-align:right;\"> 930881.3 </td>\n   <td style=\"text-align:right;\"> 0.7565301 </td>\n   <td style=\"text-align:right;\"> 1230461.71 </td>\n   <td style=\"text-align:right;\"> 299580.4 </td>\n   <td style=\"text-align:right;\"> 94.27929 </td>\n   <td style=\"text-align:right;\"> 387.23178 </td>\n   <td style=\"text-align:right;\"> 292.95249 </td>\n   <td style=\"text-align:right;\"> 81.25589 </td>\n   <td style=\"text-align:right;\"> 333.74096 </td>\n   <td style=\"text-align:right;\"> 252.4851 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-13 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 11.63511 </td>\n   <td style=\"text-align:right;\"> 2522.6972 </td>\n   <td style=\"text-align:right;\"> 1224.8463 </td>\n   <td style=\"text-align:right;\"> 10.900540 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1130.6046 </td>\n   <td style=\"text-align:right;\"> 299189.3 </td>\n   <td style=\"text-align:right;\"> 749334.91 </td>\n   <td style=\"text-align:right;\"> 47.66533 </td>\n   <td style=\"text-align:right;\"> 0.4378355 </td>\n   <td style=\"text-align:right;\"> 1.1052602 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 70.50445 </td>\n   <td style=\"text-align:right;\"> 450145.58 </td>\n   <td style=\"text-align:right;\"> 4051310.3 </td>\n   <td style=\"text-align:right;\"> 0.6007268 </td>\n   <td style=\"text-align:right;\"> 6744014.23 </td>\n   <td style=\"text-align:right;\"> 2692704.0 </td>\n   <td style=\"text-align:right;\"> 244.26684 </td>\n   <td style=\"text-align:right;\"> 611.77875 </td>\n   <td style=\"text-align:right;\"> 367.51190 </td>\n   <td style=\"text-align:right;\"> 264.62772 </td>\n   <td style=\"text-align:right;\"> 662.77361 </td>\n   <td style=\"text-align:right;\"> 398.1459 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-20 </td>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 18.25358 </td>\n   <td style=\"text-align:right;\"> 2129.5179 </td>\n   <td style=\"text-align:right;\"> 1311.9786 </td>\n   <td style=\"text-align:right;\"> 11.955648 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 441.2600 </td>\n   <td style=\"text-align:right;\"> 481866.3 </td>\n   <td style=\"text-align:right;\"> 738063.17 </td>\n   <td style=\"text-align:right;\"> 48.18567 </td>\n   <td style=\"text-align:right;\"> 1.2270642 </td>\n   <td style=\"text-align:right;\"> 0.9414481 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 65.98470 </td>\n   <td style=\"text-align:right;\"> 256196.91 </td>\n   <td style=\"text-align:right;\"> 1024787.6 </td>\n   <td style=\"text-align:right;\"> 0.3471206 </td>\n   <td style=\"text-align:right;\"> 2952252.69 </td>\n   <td style=\"text-align:right;\"> 1927465.0 </td>\n   <td style=\"text-align:right;\"> 367.28211 </td>\n   <td style=\"text-align:right;\"> 562.55733 </td>\n   <td style=\"text-align:right;\"> 195.27522 </td>\n   <td style=\"text-align:right;\"> 1092.02351 </td>\n   <td style=\"text-align:right;\"> 1672.62662 </td>\n   <td style=\"text-align:right;\"> 580.6031 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Revenue Leakage Estimates from Average_Load_Percentage\n\nRevenue Leakage quantifies how much revenue is foregone by not operating at full capacity. By comparing the actual revenue per voyage against a hypothetical 100% load scenario, the new Revenue_Leakage field highlights how much potential income is lost when ships sail below maximum utilization. This metric provides a tangible financial estimate of the cost of underused capacity, guiding decisions about pricing, scheduling, and cargo allocation to maximize profitability.\n\n-   Average_Load_Percentage / 100 converts the percentage to a decimal (e.g., 80 → 0.80).\n-   Revenue_per_Voyage_USD / (Average_Load_Percentage / 100) estimates the hypothetical revenue if the ship had been at 100% load.\n-   Subtracting Revenue_per_Voyage_USD gives the Revenue_Leakage (the amount “lost” by operating below full capacity).\n-   case_when ensures that if the load is already at or above 100%, leakage is 0, and handles other edge cases.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  mutate(\n    Revenue_Leakage = case_when(\n      # If load is at or above 100%, there's no \"lost\" revenue\n      Average_Load_Percentage >= 100 ~ 0,\n      \n      # Otherwise, compute the difference between \n      # \"full-load\" revenue and actual revenue.\n      Average_Load_Percentage > 0 ~\n        (Revenue_per_Voyage_USD / (Average_Load_Percentage / 100)) - Revenue_per_Voyage_USD,\n      \n      # If load is zero or missing, set leakage to 0 or NA, as appropriate\n      TRUE ~ 0\n    )\n  )\n```\n:::\n\n\n\nThis formula (Weekly_Revenue_Leakage = Revenue_Leakage × Weekly_Voyage_Count) converts the per-voyage leakage into a total weekly leakage, reflecting how repeated voyages in the same week amplify revenue loss.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  mutate(\n    # Weekly revenue leakage is per-voyage leakage multiplied by how many voyages occur that week\n    Weekly_Revenue_Leakage = Revenue_Leakage * Weekly_Voyage_Count\n  )\n\ncolnames(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Date\"                          \"Ship_Type\"                    \n [3] \"Route_Type\"                    \"Engine_Type\"                  \n [5] \"Maintenance_Status\"            \"Speed_Over_Ground_knots\"      \n [7] \"Engine_Power_kW\"               \"Distance_Traveled_nm\"         \n [9] \"Draft_meters\"                  \"Weather_Condition\"            \n[11] \"Cargo_Weight_tons\"             \"Operational_Cost_USD\"         \n[13] \"Revenue_per_Voyage_USD\"        \"Turnaround_Time_hours\"        \n[15] \"Efficiency_nm_per_kWh\"         \"Seasonal_Impact_Score\"        \n[17] \"Weekly_Voyage_Count\"           \"Average_Load_Percentage\"      \n[19] \"Net_Profit\"                    \"Weekly_Total_Profit\"          \n[21] \"Profit_Margin\"                 \"Weekly_Total_Revenue\"         \n[23] \"Weekly_Total_Operational_Cost\" \"Cost_per_NM\"                  \n[25] \"Revenue_per_NM\"                \"Profit_per_NM\"                \n[27] \"Cost_per_Ton\"                  \"Revenue_per_Ton\"              \n[29] \"Profit_per_Ton\"                \"Revenue_Leakage\"              \n[31] \"Weekly_Revenue_Leakage\"       \n```\n\n\n:::\n\n```{.r .cell-code}\nship_data %>%\n  head(10) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n   <th style=\"text-align:right;\"> Net_Profit </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Profit </th>\n   <th style=\"text-align:right;\"> Profit_Margin </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Revenue </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Operational_Cost </th>\n   <th style=\"text-align:right;\"> Cost_per_NM </th>\n   <th style=\"text-align:right;\"> Revenue_per_NM </th>\n   <th style=\"text-align:right;\"> Profit_per_NM </th>\n   <th style=\"text-align:right;\"> Cost_per_Ton </th>\n   <th style=\"text-align:right;\"> Revenue_per_Ton </th>\n   <th style=\"text-align:right;\"> Profit_per_Ton </th>\n   <th style=\"text-align:right;\"> Revenue_Leakage </th>\n   <th style=\"text-align:right;\"> Weekly_Revenue_Leakage </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-11 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 10.38758 </td>\n   <td style=\"text-align:right;\"> 1796.0574 </td>\n   <td style=\"text-align:right;\"> 1060.4864 </td>\n   <td style=\"text-align:right;\"> 14.653083 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 162.3947 </td>\n   <td style=\"text-align:right;\"> 483388.0 </td>\n   <td style=\"text-align:right;\"> 883765.79 </td>\n   <td style=\"text-align:right;\"> 63.24820 </td>\n   <td style=\"text-align:right;\"> 0.2903614 </td>\n   <td style=\"text-align:right;\"> 0.8856478 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 93.89537 </td>\n   <td style=\"text-align:right;\"> 400377.79 </td>\n   <td style=\"text-align:right;\"> 2402266.7 </td>\n   <td style=\"text-align:right;\"> 0.4530361 </td>\n   <td style=\"text-align:right;\"> 5302594.72 </td>\n   <td style=\"text-align:right;\"> 2900328.0 </td>\n   <td style=\"text-align:right;\"> 455.81726 </td>\n   <td style=\"text-align:right;\"> 833.35892 </td>\n   <td style=\"text-align:right;\"> 377.54166 </td>\n   <td style=\"text-align:right;\"> 2976.62403 </td>\n   <td style=\"text-align:right;\"> 5442.08478 </td>\n   <td style=\"text-align:right;\"> 2465.4607 </td>\n   <td style=\"text-align:right;\"> 57458.22 </td>\n   <td style=\"text-align:right;\"> 344749.33 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-18 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 20.74975 </td>\n   <td style=\"text-align:right;\"> 1648.5567 </td>\n   <td style=\"text-align:right;\"> 658.8741 </td>\n   <td style=\"text-align:right;\"> 7.199261 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 178.0409 </td>\n   <td style=\"text-align:right;\"> 448543.4 </td>\n   <td style=\"text-align:right;\"> 394018.75 </td>\n   <td style=\"text-align:right;\"> 49.41815 </td>\n   <td style=\"text-align:right;\"> 0.4995945 </td>\n   <td style=\"text-align:right;\"> 1.4058132 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 96.21824 </td>\n   <td style=\"text-align:right;\"> -54524.66 </td>\n   <td style=\"text-align:right;\"> -490721.9 </td>\n   <td style=\"text-align:right;\"> -0.1383809 </td>\n   <td style=\"text-align:right;\"> 3546168.72 </td>\n   <td style=\"text-align:right;\"> 4036890.6 </td>\n   <td style=\"text-align:right;\"> 680.77251 </td>\n   <td style=\"text-align:right;\"> 598.01823 </td>\n   <td style=\"text-align:right;\"> -82.75428 </td>\n   <td style=\"text-align:right;\"> 2519.32765 </td>\n   <td style=\"text-align:right;\"> 2213.07975 </td>\n   <td style=\"text-align:right;\"> -306.2479 </td>\n   <td style=\"text-align:right;\"> 15486.49 </td>\n   <td style=\"text-align:right;\"> 139378.38 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-25 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 21.05510 </td>\n   <td style=\"text-align:right;\"> 915.2618 </td>\n   <td style=\"text-align:right;\"> 1126.8225 </td>\n   <td style=\"text-align:right;\"> 11.789062 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1737.3853 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 22.40911 </td>\n   <td style=\"text-align:right;\"> 0.7029057 </td>\n   <td style=\"text-align:right;\"> 1.3707043 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 66.19370 </td>\n   <td style=\"text-align:right;\"> -173798.23 </td>\n   <td style=\"text-align:right;\"> -173798.2 </td>\n   <td style=\"text-align:right;\"> -1.9850999 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 231.93502 </td>\n   <td style=\"text-align:right;\"> 77.69757 </td>\n   <td style=\"text-align:right;\"> -154.23745 </td>\n   <td style=\"text-align:right;\"> 150.42697 </td>\n   <td style=\"text-align:right;\"> 50.39261 </td>\n   <td style=\"text-align:right;\"> -100.0344 </td>\n   <td style=\"text-align:right;\"> 44714.05 </td>\n   <td style=\"text-align:right;\"> 44714.05 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-02 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 13.74278 </td>\n   <td style=\"text-align:right;\"> 1089.7218 </td>\n   <td style=\"text-align:right;\"> 1445.2812 </td>\n   <td style=\"text-align:right;\"> 9.727833 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 260.5951 </td>\n   <td style=\"text-align:right;\"> 287718.4 </td>\n   <td style=\"text-align:right;\"> 676121.46 </td>\n   <td style=\"text-align:right;\"> 64.15823 </td>\n   <td style=\"text-align:right;\"> 1.3313431 </td>\n   <td style=\"text-align:right;\"> 0.5833834 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 80.00858 </td>\n   <td style=\"text-align:right;\"> 388403.08 </td>\n   <td style=\"text-align:right;\"> 3107224.7 </td>\n   <td style=\"text-align:right;\"> 0.5744576 </td>\n   <td style=\"text-align:right;\"> 5408971.68 </td>\n   <td style=\"text-align:right;\"> 2301747.0 </td>\n   <td style=\"text-align:right;\"> 199.07433 </td>\n   <td style=\"text-align:right;\"> 467.81310 </td>\n   <td style=\"text-align:right;\"> 268.73877 </td>\n   <td style=\"text-align:right;\"> 1104.08205 </td>\n   <td style=\"text-align:right;\"> 2594.52864 </td>\n   <td style=\"text-align:right;\"> 1490.4466 </td>\n   <td style=\"text-align:right;\"> 168939.72 </td>\n   <td style=\"text-align:right;\"> 1351517.80 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-09 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 18.61620 </td>\n   <td style=\"text-align:right;\"> 2171.6466 </td>\n   <td style=\"text-align:right;\"> 723.3042 </td>\n   <td style=\"text-align:right;\"> 14.916320 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1912.5098 </td>\n   <td style=\"text-align:right;\"> 184569.0 </td>\n   <td style=\"text-align:right;\"> 776698.35 </td>\n   <td style=\"text-align:right;\"> 47.47615 </td>\n   <td style=\"text-align:right;\"> 1.3702060 </td>\n   <td style=\"text-align:right;\"> 1.4377250 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 53.17490 </td>\n   <td style=\"text-align:right;\"> 592129.31 </td>\n   <td style=\"text-align:right;\"> 4144905.2 </td>\n   <td style=\"text-align:right;\"> 0.7623671 </td>\n   <td style=\"text-align:right;\"> 5436888.48 </td>\n   <td style=\"text-align:right;\"> 1291983.3 </td>\n   <td style=\"text-align:right;\"> 255.17485 </td>\n   <td style=\"text-align:right;\"> 1073.81976 </td>\n   <td style=\"text-align:right;\"> 818.64490 </td>\n   <td style=\"text-align:right;\"> 96.50620 </td>\n   <td style=\"text-align:right;\"> 406.11472 </td>\n   <td style=\"text-align:right;\"> 309.6085 </td>\n   <td style=\"text-align:right;\"> 683950.16 </td>\n   <td style=\"text-align:right;\"> 4787651.15 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-16 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 20.43312 </td>\n   <td style=\"text-align:right;\"> 2505.0435 </td>\n   <td style=\"text-align:right;\"> 270.1186 </td>\n   <td style=\"text-align:right;\"> 8.455264 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1191.4364 </td>\n   <td style=\"text-align:right;\"> 434449.3 </td>\n   <td style=\"text-align:right;\"> 739431.83 </td>\n   <td style=\"text-align:right;\"> 29.04042 </td>\n   <td style=\"text-align:right;\"> 1.1203894 </td>\n   <td style=\"text-align:right;\"> 0.6029316 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 58.50864 </td>\n   <td style=\"text-align:right;\"> 304982.56 </td>\n   <td style=\"text-align:right;\"> 914947.7 </td>\n   <td style=\"text-align:right;\"> 0.4124553 </td>\n   <td style=\"text-align:right;\"> 2218295.48 </td>\n   <td style=\"text-align:right;\"> 1303347.8 </td>\n   <td style=\"text-align:right;\"> 1608.36493 </td>\n   <td style=\"text-align:right;\"> 2737.43407 </td>\n   <td style=\"text-align:right;\"> 1129.06914 </td>\n   <td style=\"text-align:right;\"> 364.64326 </td>\n   <td style=\"text-align:right;\"> 620.62215 </td>\n   <td style=\"text-align:right;\"> 255.9789 </td>\n   <td style=\"text-align:right;\"> 524367.65 </td>\n   <td style=\"text-align:right;\"> 1573102.95 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-23 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 23.49805 </td>\n   <td style=\"text-align:right;\"> 814.8065 </td>\n   <td style=\"text-align:right;\"> 1717.3284 </td>\n   <td style=\"text-align:right;\"> 9.283780 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 318.4493 </td>\n   <td style=\"text-align:right;\"> 348380.6 </td>\n   <td style=\"text-align:right;\"> 462211.40 </td>\n   <td style=\"text-align:right;\"> 52.47860 </td>\n   <td style=\"text-align:right;\"> 0.6959746 </td>\n   <td style=\"text-align:right;\"> 1.4086634 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 94.59197 </td>\n   <td style=\"text-align:right;\"> 113830.79 </td>\n   <td style=\"text-align:right;\"> 682984.8 </td>\n   <td style=\"text-align:right;\"> 0.2462743 </td>\n   <td style=\"text-align:right;\"> 2773268.41 </td>\n   <td style=\"text-align:right;\"> 2090283.6 </td>\n   <td style=\"text-align:right;\"> 202.86196 </td>\n   <td style=\"text-align:right;\"> 269.14561 </td>\n   <td style=\"text-align:right;\"> 66.28365 </td>\n   <td style=\"text-align:right;\"> 1093.99093 </td>\n   <td style=\"text-align:right;\"> 1451.44440 </td>\n   <td style=\"text-align:right;\"> 357.4535 </td>\n   <td style=\"text-align:right;\"> 26425.63 </td>\n   <td style=\"text-align:right;\"> 158553.75 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-06 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 23.22710 </td>\n   <td style=\"text-align:right;\"> 2685.4017 </td>\n   <td style=\"text-align:right;\"> 1588.7923 </td>\n   <td style=\"text-align:right;\"> 11.721261 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1843.4383 </td>\n   <td style=\"text-align:right;\"> 149790.2 </td>\n   <td style=\"text-align:right;\"> 615230.86 </td>\n   <td style=\"text-align:right;\"> 63.74276 </td>\n   <td style=\"text-align:right;\"> 0.4406762 </td>\n   <td style=\"text-align:right;\"> 1.4355687 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 79.45133 </td>\n   <td style=\"text-align:right;\"> 465440.65 </td>\n   <td style=\"text-align:right;\"> 930881.3 </td>\n   <td style=\"text-align:right;\"> 0.7565301 </td>\n   <td style=\"text-align:right;\"> 1230461.71 </td>\n   <td style=\"text-align:right;\"> 299580.4 </td>\n   <td style=\"text-align:right;\"> 94.27929 </td>\n   <td style=\"text-align:right;\"> 387.23178 </td>\n   <td style=\"text-align:right;\"> 292.95249 </td>\n   <td style=\"text-align:right;\"> 81.25589 </td>\n   <td style=\"text-align:right;\"> 333.74096 </td>\n   <td style=\"text-align:right;\"> 252.4851 </td>\n   <td style=\"text-align:right;\"> 159118.49 </td>\n   <td style=\"text-align:right;\"> 318236.98 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-13 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 11.63511 </td>\n   <td style=\"text-align:right;\"> 2522.6972 </td>\n   <td style=\"text-align:right;\"> 1224.8463 </td>\n   <td style=\"text-align:right;\"> 10.900540 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1130.6046 </td>\n   <td style=\"text-align:right;\"> 299189.3 </td>\n   <td style=\"text-align:right;\"> 749334.91 </td>\n   <td style=\"text-align:right;\"> 47.66533 </td>\n   <td style=\"text-align:right;\"> 0.4378355 </td>\n   <td style=\"text-align:right;\"> 1.1052602 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 70.50445 </td>\n   <td style=\"text-align:right;\"> 450145.58 </td>\n   <td style=\"text-align:right;\"> 4051310.3 </td>\n   <td style=\"text-align:right;\"> 0.6007268 </td>\n   <td style=\"text-align:right;\"> 6744014.23 </td>\n   <td style=\"text-align:right;\"> 2692704.0 </td>\n   <td style=\"text-align:right;\"> 244.26684 </td>\n   <td style=\"text-align:right;\"> 611.77875 </td>\n   <td style=\"text-align:right;\"> 367.51190 </td>\n   <td style=\"text-align:right;\"> 264.62772 </td>\n   <td style=\"text-align:right;\"> 662.77361 </td>\n   <td style=\"text-align:right;\"> 398.1459 </td>\n   <td style=\"text-align:right;\"> 313484.44 </td>\n   <td style=\"text-align:right;\"> 2821359.96 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-20 </td>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 18.25358 </td>\n   <td style=\"text-align:right;\"> 2129.5179 </td>\n   <td style=\"text-align:right;\"> 1311.9786 </td>\n   <td style=\"text-align:right;\"> 11.955648 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 441.2600 </td>\n   <td style=\"text-align:right;\"> 481866.3 </td>\n   <td style=\"text-align:right;\"> 738063.17 </td>\n   <td style=\"text-align:right;\"> 48.18567 </td>\n   <td style=\"text-align:right;\"> 1.2270642 </td>\n   <td style=\"text-align:right;\"> 0.9414481 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 65.98470 </td>\n   <td style=\"text-align:right;\"> 256196.91 </td>\n   <td style=\"text-align:right;\"> 1024787.6 </td>\n   <td style=\"text-align:right;\"> 0.3471206 </td>\n   <td style=\"text-align:right;\"> 2952252.69 </td>\n   <td style=\"text-align:right;\"> 1927465.0 </td>\n   <td style=\"text-align:right;\"> 367.28211 </td>\n   <td style=\"text-align:right;\"> 562.55733 </td>\n   <td style=\"text-align:right;\"> 195.27522 </td>\n   <td style=\"text-align:right;\"> 1092.02351 </td>\n   <td style=\"text-align:right;\"> 1672.62662 </td>\n   <td style=\"text-align:right;\"> 580.6031 </td>\n   <td style=\"text-align:right;\"> 380473.59 </td>\n   <td style=\"text-align:right;\"> 1521894.36 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Voyage Utilization Score\n\n| Score Range | Label  |\n|-------------|--------|\n| ≥ 0.30      | High   |\n| 0.10 – 0.29 | Medium |\n| \\< 0.10     | Low    |\n| \\< 0        | Loss.  |\n\nThis hybrid metric blends how fully a vessel is loaded and how profit‐efficient it is per dollar of cost. A higher score (≥ 0.30) signals strong utilization and profitability, while a lower score (\\< 0.10) implies underperformance. Any negative score highlights operations where costs outweigh revenue, even at high load factors. Defining these clear thresholds helps managers quickly identify which voyages are most profitable, which need optimization, and which are outright unviable.\n\n-   Voyage Utilization Score = (Average_Load_Percentage ÷ 100) × (Net_Profit ÷ Operational_Cost_USD)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  mutate(\n    # Calculate the Voyage Utilization Score \n    # (substitute the appropriate cost column if it's named differently in your dataset)\n    Voyage_Utilization_Score = (Average_Load_Percentage / 100) * (Net_Profit / Operational_Cost_USD),\n    \n    # Create a categorical label based on the defined thresholds\n    Voyage_Performance_Label = case_when(\n      Voyage_Utilization_Score >= 0.30  ~ \"High\",\n      Voyage_Utilization_Score >= 0.10  ~ \"Medium\",\n      Voyage_Utilization_Score >= 0.00  ~ \"Low\",\n      TRUE                              ~ \"Loss\"\n    )\n  )\n\ncolnames(ship_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Date\"                          \"Ship_Type\"                    \n [3] \"Route_Type\"                    \"Engine_Type\"                  \n [5] \"Maintenance_Status\"            \"Speed_Over_Ground_knots\"      \n [7] \"Engine_Power_kW\"               \"Distance_Traveled_nm\"         \n [9] \"Draft_meters\"                  \"Weather_Condition\"            \n[11] \"Cargo_Weight_tons\"             \"Operational_Cost_USD\"         \n[13] \"Revenue_per_Voyage_USD\"        \"Turnaround_Time_hours\"        \n[15] \"Efficiency_nm_per_kWh\"         \"Seasonal_Impact_Score\"        \n[17] \"Weekly_Voyage_Count\"           \"Average_Load_Percentage\"      \n[19] \"Net_Profit\"                    \"Weekly_Total_Profit\"          \n[21] \"Profit_Margin\"                 \"Weekly_Total_Revenue\"         \n[23] \"Weekly_Total_Operational_Cost\" \"Cost_per_NM\"                  \n[25] \"Revenue_per_NM\"                \"Profit_per_NM\"                \n[27] \"Cost_per_Ton\"                  \"Revenue_per_Ton\"              \n[29] \"Profit_per_Ton\"                \"Revenue_Leakage\"              \n[31] \"Weekly_Revenue_Leakage\"        \"Voyage_Utilization_Score\"     \n[33] \"Voyage_Performance_Label\"     \n```\n\n\n:::\n\n```{.r .cell-code}\n# Quick preview\nship_data %>%\n  select(Average_Load_Percentage, Net_Profit, Operational_Cost_USD, \n         Voyage_Utilization_Score, Voyage_Performance_Label) %>%\n  head(10) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n   <th style=\"text-align:right;\"> Net_Profit </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Voyage_Utilization_Score </th>\n   <th style=\"text-align:left;\"> Voyage_Performance_Label </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 93.89537 </td>\n   <td style=\"text-align:right;\"> 400377.79 </td>\n   <td style=\"text-align:right;\"> 483388.0 </td>\n   <td style=\"text-align:right;\"> 0.7777111 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 96.21824 </td>\n   <td style=\"text-align:right;\"> -54524.66 </td>\n   <td style=\"text-align:right;\"> 448543.4 </td>\n   <td style=\"text-align:right;\"> -0.1169623 </td>\n   <td style=\"text-align:left;\"> Loss </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 66.19370 </td>\n   <td style=\"text-align:right;\"> -173798.23 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> -0.4401900 </td>\n   <td style=\"text-align:left;\"> Loss </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 80.00858 </td>\n   <td style=\"text-align:right;\"> 388403.08 </td>\n   <td style=\"text-align:right;\"> 287718.4 </td>\n   <td style=\"text-align:right;\"> 1.0800693 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 53.17490 </td>\n   <td style=\"text-align:right;\"> 592129.31 </td>\n   <td style=\"text-align:right;\"> 184569.0 </td>\n   <td style=\"text-align:right;\"> 1.7059424 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 58.50864 </td>\n   <td style=\"text-align:right;\"> 304982.56 </td>\n   <td style=\"text-align:right;\"> 434449.3 </td>\n   <td style=\"text-align:right;\"> 0.4107295 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 94.59197 </td>\n   <td style=\"text-align:right;\"> 113830.79 </td>\n   <td style=\"text-align:right;\"> 348380.6 </td>\n   <td style=\"text-align:right;\"> 0.3090723 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 79.45133 </td>\n   <td style=\"text-align:right;\"> 465440.65 </td>\n   <td style=\"text-align:right;\"> 149790.2 </td>\n   <td style=\"text-align:right;\"> 2.4687781 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 70.50445 </td>\n   <td style=\"text-align:right;\"> 450145.58 </td>\n   <td style=\"text-align:right;\"> 299189.3 </td>\n   <td style=\"text-align:right;\"> 1.0607753 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 65.98470 </td>\n   <td style=\"text-align:right;\"> 256196.91 </td>\n   <td style=\"text-align:right;\"> 481866.3 </td>\n   <td style=\"text-align:right;\"> 0.3508251 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Weekly Voyage Frequency by Ship Type and Route Type\n\nThis pivot table displays how many voyages in the dataset fall under each Ship_Type and Route_Type, broken down by the Weekly_Voyage_Count columns labeled 1 through 9. For instance, in the row for “Bulk Carrier / Short‐haul,” 21 total voyages had a weekly frequency of 1, 34 voyages had a weekly frequency of 2, and so on. The final Subtotal column is the sum of those counts across all frequency buckets, indicating the total number of voyages for that combination of Ship_Type and Route_Type. This format makes it easy to spot which shipping segments operate most frequently at certain counts (e.g., once a week vs. nine times a week) and compare overall totals across different routes and vessel categories.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  group_by(Weekly_Voyage_Count) %>%\n  summarise(Record_Count = n()) %>%\n  arrange(Weekly_Voyage_Count)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 9 × 2\n  Weekly_Voyage_Count Record_Count\n                <int>        <int>\n1                   1          259\n2                   2          254\n3                   3          229\n4                   4          245\n5                   5          226\n6                   6          211\n7                   7          239\n8                   8          244\n9                   9          220\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  group_by(Weekly_Voyage_Count, Ship_Type) %>%\n  summarise(Record_Count = n()) %>%\n  arrange(Weekly_Voyage_Count, Ship_Type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 36 × 3\n# Groups:   Weekly_Voyage_Count [9]\n   Weekly_Voyage_Count Ship_Type      Record_Count\n                 <int> <chr>                 <int>\n 1                   1 Bulk Carrier             65\n 2                   1 Container Ship           75\n 3                   1 Fish Carrier             58\n 4                   1 Tanker                   61\n 5                   2 Bulk Carrier             72\n 6                   2 Container Ship           56\n 7                   2 Fish Carrier             58\n 8                   2 Tanker                   68\n 9                   3 Bulk Carrier             62\n10                   3 Container Ship           49\n# ℹ 26 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwide_table <- ship_data %>%\n  group_by(Ship_Type, Route_Type, Weekly_Voyage_Count) %>%\n  summarise(\n    Sum_of_Weekly_Voyages = sum(Weekly_Voyage_Count),\n    .groups = \"drop\"\n  ) %>%\n  pivot_wider(\n    names_from  = Weekly_Voyage_Count,\n    values_from = Sum_of_Weekly_Voyages,\n    values_fill = 0\n  ) %>%\n  mutate(Subtotal = rowSums(across(`1`:`9`))) %>%\n  arrange(Ship_Type, Route_Type)\n\nwide_table %>%\n  kable() %>%\n  kable_styling(full_width = FALSE) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:right;\"> 1 </th>\n   <th style=\"text-align:right;\"> 2 </th>\n   <th style=\"text-align:right;\"> 3 </th>\n   <th style=\"text-align:right;\"> 4 </th>\n   <th style=\"text-align:right;\"> 5 </th>\n   <th style=\"text-align:right;\"> 6 </th>\n   <th style=\"text-align:right;\"> 7 </th>\n   <th style=\"text-align:right;\"> 8 </th>\n   <th style=\"text-align:right;\"> 9 </th>\n   <th style=\"text-align:right;\"> Subtotal </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n   <td style=\"text-align:right;\"> 57 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 54 </td>\n   <td style=\"text-align:right;\"> 105 </td>\n   <td style=\"text-align:right;\"> 104 </td>\n   <td style=\"text-align:right;\"> 171 </td>\n   <td style=\"text-align:right;\"> 663 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:right;\"> 14 </td>\n   <td style=\"text-align:right;\"> 34 </td>\n   <td style=\"text-align:right;\"> 54 </td>\n   <td style=\"text-align:right;\"> 52 </td>\n   <td style=\"text-align:right;\"> 55 </td>\n   <td style=\"text-align:right;\"> 66 </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 136 </td>\n   <td style=\"text-align:right;\"> 180 </td>\n   <td style=\"text-align:right;\"> 710 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:right;\"> 34 </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 125 </td>\n   <td style=\"text-align:right;\"> 90 </td>\n   <td style=\"text-align:right;\"> 126 </td>\n   <td style=\"text-align:right;\"> 80 </td>\n   <td style=\"text-align:right;\"> 144 </td>\n   <td style=\"text-align:right;\"> 719 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 32 </td>\n   <td style=\"text-align:right;\"> 48 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n   <td style=\"text-align:right;\"> 60 </td>\n   <td style=\"text-align:right;\"> 78 </td>\n   <td style=\"text-align:right;\"> 112 </td>\n   <td style=\"text-align:right;\"> 136 </td>\n   <td style=\"text-align:right;\"> 117 </td>\n   <td style=\"text-align:right;\"> 632 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 39 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 80 </td>\n   <td style=\"text-align:right;\"> 99 </td>\n   <td style=\"text-align:right;\"> 607 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:right;\"> 23 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:right;\"> 76 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 132 </td>\n   <td style=\"text-align:right;\"> 91 </td>\n   <td style=\"text-align:right;\"> 128 </td>\n   <td style=\"text-align:right;\"> 198 </td>\n   <td style=\"text-align:right;\"> 774 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n   <td style=\"text-align:right;\"> 44 </td>\n   <td style=\"text-align:right;\"> 50 </td>\n   <td style=\"text-align:right;\"> 54 </td>\n   <td style=\"text-align:right;\"> 119 </td>\n   <td style=\"text-align:right;\"> 104 </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 546 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 26 </td>\n   <td style=\"text-align:right;\"> 57 </td>\n   <td style=\"text-align:right;\"> 60 </td>\n   <td style=\"text-align:right;\"> 95 </td>\n   <td style=\"text-align:right;\"> 66 </td>\n   <td style=\"text-align:right;\"> 98 </td>\n   <td style=\"text-align:right;\"> 120 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 614 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:right;\"> 12 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:right;\"> 45 </td>\n   <td style=\"text-align:right;\"> 60 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 84 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 144 </td>\n   <td style=\"text-align:right;\"> 602 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:right;\"> 17 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:right;\"> 51 </td>\n   <td style=\"text-align:right;\"> 68 </td>\n   <td style=\"text-align:right;\"> 85 </td>\n   <td style=\"text-align:right;\"> 84 </td>\n   <td style=\"text-align:right;\"> 70 </td>\n   <td style=\"text-align:right;\"> 144 </td>\n   <td style=\"text-align:right;\"> 90 </td>\n   <td style=\"text-align:right;\"> 633 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 36 </td>\n   <td style=\"text-align:right;\"> 27 </td>\n   <td style=\"text-align:right;\"> 68 </td>\n   <td style=\"text-align:right;\"> 45 </td>\n   <td style=\"text-align:right;\"> 84 </td>\n   <td style=\"text-align:right;\"> 112 </td>\n   <td style=\"text-align:right;\"> 120 </td>\n   <td style=\"text-align:right;\"> 90 </td>\n   <td style=\"text-align:right;\"> 600 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 42 </td>\n   <td style=\"text-align:right;\"> 56 </td>\n   <td style=\"text-align:right;\"> 65 </td>\n   <td style=\"text-align:right;\"> 96 </td>\n   <td style=\"text-align:right;\"> 133 </td>\n   <td style=\"text-align:right;\"> 160 </td>\n   <td style=\"text-align:right;\"> 198 </td>\n   <td style=\"text-align:right;\"> 779 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Coastal </td>\n   <td style=\"text-align:right;\"> 21 </td>\n   <td style=\"text-align:right;\"> 46 </td>\n   <td style=\"text-align:right;\"> 39 </td>\n   <td style=\"text-align:right;\"> 68 </td>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 96 </td>\n   <td style=\"text-align:right;\"> 84 </td>\n   <td style=\"text-align:right;\"> 192 </td>\n   <td style=\"text-align:right;\"> 72 </td>\n   <td style=\"text-align:right;\"> 638 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 28 </td>\n   <td style=\"text-align:right;\"> 54 </td>\n   <td style=\"text-align:right;\"> 88 </td>\n   <td style=\"text-align:right;\"> 85 </td>\n   <td style=\"text-align:right;\"> 66 </td>\n   <td style=\"text-align:right;\"> 112 </td>\n   <td style=\"text-align:right;\"> 136 </td>\n   <td style=\"text-align:right;\"> 90 </td>\n   <td style=\"text-align:right;\"> 677 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:right;\"> 15 </td>\n   <td style=\"text-align:right;\"> 38 </td>\n   <td style=\"text-align:right;\"> 57 </td>\n   <td style=\"text-align:right;\"> 60 </td>\n   <td style=\"text-align:right;\"> 70 </td>\n   <td style=\"text-align:right;\"> 78 </td>\n   <td style=\"text-align:right;\"> 84 </td>\n   <td style=\"text-align:right;\"> 120 </td>\n   <td style=\"text-align:right;\"> 99 </td>\n   <td style=\"text-align:right;\"> 621 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 24 </td>\n   <td style=\"text-align:right;\"> 39 </td>\n   <td style=\"text-align:right;\"> 64 </td>\n   <td style=\"text-align:right;\"> 75 </td>\n   <td style=\"text-align:right;\"> 78 </td>\n   <td style=\"text-align:right;\"> 105 </td>\n   <td style=\"text-align:right;\"> 120 </td>\n   <td style=\"text-align:right;\"> 108 </td>\n   <td style=\"text-align:right;\"> 620 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n### Weekly Frequency Utilization Score\n\nThis metric compares each voyage’s weekly frequency to the average frequency (for the same ship type and route) and then factors in the vessel’s load percentage. It tells you whether a particular voyage is sailed more or less often than typical for that category and how effectively its capacity is being used. A high score indicates above‐average sailing frequency and high load factor, while a low score suggests below‐average frequency or underutilized capacity.\n\nBelow is a hypothetical range for the Weekly Frequency Utilization Score, aligning closely with industry best practices and reflecting the distribution observed in the processed ship_data. These thresholds may be refined further based on further benchmarks or changing market conditions.\n\n| Score Range | Category | Interpretation |\n|------------------------|------------------------|------------------------|\n| ≥ 0.35 | High | Frequent sailings at solid load levels (75th percentile or above) |\n| 0.20 – 0.34 | Medium | Sufficient frequency and moderate capacity usage |\n| 0.05 – 0.19 | Low | Infrequent sailings or partially filled voyages |\n| \\< 0.05 | Minimal | Significantly underutilized capacity or very few weekly departures |\n\n**Rationale** - **High (≥ 0.35)**: Represents top‐tier performance where voyages are running often and at strong load factors. - **Medium (0.20 – 0.34)**: Indicates moderate efficiency—voyages are either reasonably frequent or well‐loaded, but not at peak levels. - **Low (0.05 – 0.19)**: Captures sporadic or suboptimal voyages—there is likely room to improve scheduling or load management. - **Minimal (\\< 0.05)**: Signifies major underutilization; either very low frequency or extremely poor load factor.\n\nThese thresholds help identify segments or weeks where capacity usage and voyage repetition fall short of internal or industry standards, prompting targeted improvements in scheduling, pricing, or fleet allocation.\n\nThe combine relative frequency and capacity utilization. The idea is:\n\n-   Compare the actual weekly voyage count to the average weekly voyage count for the same ship–route segment. This ratio indicates whether a particular record’s frequency is above or below average.\n-   Multiply by the load factor (Average_Load_Percentage ÷ 100), reflecting how fully the vessel is utilized.\n\nFormally:\n\nWeekly_Frequency_Utilization_Score = (Weekly_Voyage_Count / Avg_Weekly_Voyage_Freq_Ship_Route) × (Average_Load_Percentage / 100)\n\n-   If Weekly_Voyage_Count is greater than the average for that ship–route combination, the ratio exceeds 1, boosting the score.\n-   If the vessel also has a high load factor, it further increases the score—meaning it’s sailing more frequently and more fully loaded than its peers.\n-   Conversely, a below‐average voyage count or low load factor reduces the score.\n\nThis approach highlights both how often a particular route is sailed relative to the typical frequency in that segment and how effectively its capacity is used.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data <- ship_data %>%\n  group_by(Ship_Type, Route_Type) %>%\n  mutate(\n    Avg_Weekly_Freq_Ship_Route = mean(Weekly_Voyage_Count, na.rm = TRUE)\n  ) %>%\n  ungroup() %>%\n  mutate(\n    Weekly_Frequency_Utilization_Score = (Weekly_Voyage_Count / Avg_Weekly_Freq_Ship_Route) * (Average_Load_Percentage / 100),\n    Weekly_Frequency_Utilization_Label = case_when(\n      Weekly_Frequency_Utilization_Score >= 0.35 ~ \"High\",\n      Weekly_Frequency_Utilization_Score >= 0.20 ~ \"Medium\",\n      Weekly_Frequency_Utilization_Score >= 0.05 ~ \"Low\",\n      TRUE                                       ~ \"Minimal\"\n    )\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(\n  summary_table <- ship_data %>%\n    select(\n      Ship_Type,\n      Route_Type,\n      Date,\n      Weekly_Voyage_Count,\n      Avg_Weekly_Freq_Ship_Route,\n      Weekly_Frequency_Utilization_Score,\n      Weekly_Frequency_Utilization_Label\n    ) %>%\n    head(10)\n) %>%\n  kable() %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\", \"condensed\"))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Avg_Weekly_Freq_Ship_Route </th>\n   <th style=\"text-align:right;\"> Weekly_Frequency_Utilization_Score </th>\n   <th style=\"text-align:left;\"> Weekly_Frequency_Utilization_Label </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> 2023-06-11 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 4.761905 </td>\n   <td style=\"text-align:right;\"> 1.1830817 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> 2023-06-18 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 5.058823 </td>\n   <td style=\"text-align:right;\"> 1.7117897 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> 2023-06-25 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 5.056000 </td>\n   <td style=\"text-align:right;\"> 0.1309211 </td>\n   <td style=\"text-align:left;\"> Low </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> 2023-07-02 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 5.644927 </td>\n   <td style=\"text-align:right;\"> 1.1338828 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> 2023-07-09 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 4.795454 </td>\n   <td style=\"text-align:right;\"> 0.7762023 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> 2023-07-16 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 5.644927 </td>\n   <td style=\"text-align:right;\"> 0.3109445 </td>\n   <td style=\"text-align:left;\"> Medium </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> 2023-07-23 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 5.200000 </td>\n   <td style=\"text-align:right;\"> 1.0914458 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> 2023-08-06 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 5.058823 </td>\n   <td style=\"text-align:right;\"> 0.3141099 </td>\n   <td style=\"text-align:left;\"> Medium </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> 2023-08-13 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 4.761905 </td>\n   <td style=\"text-align:right;\"> 1.3325341 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> 2023-08-20 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 5.254237 </td>\n   <td style=\"text-align:right;\"> 0.5023352 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  head(10) %>%\n  kable() %>%\n  kable_styling(\n    bootstrap_options = c(\"striped\", \"hover\", \"condensed\"),\n    full_width = FALSE\n  )\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table table-striped table-hover table-condensed\" style=\"width: auto !important; margin-left: auto; margin-right: auto;\">\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Date </th>\n   <th style=\"text-align:left;\"> Ship_Type </th>\n   <th style=\"text-align:left;\"> Route_Type </th>\n   <th style=\"text-align:left;\"> Engine_Type </th>\n   <th style=\"text-align:left;\"> Maintenance_Status </th>\n   <th style=\"text-align:right;\"> Speed_Over_Ground_knots </th>\n   <th style=\"text-align:right;\"> Engine_Power_kW </th>\n   <th style=\"text-align:right;\"> Distance_Traveled_nm </th>\n   <th style=\"text-align:right;\"> Draft_meters </th>\n   <th style=\"text-align:left;\"> Weather_Condition </th>\n   <th style=\"text-align:right;\"> Cargo_Weight_tons </th>\n   <th style=\"text-align:right;\"> Operational_Cost_USD </th>\n   <th style=\"text-align:right;\"> Revenue_per_Voyage_USD </th>\n   <th style=\"text-align:right;\"> Turnaround_Time_hours </th>\n   <th style=\"text-align:right;\"> Efficiency_nm_per_kWh </th>\n   <th style=\"text-align:right;\"> Seasonal_Impact_Score </th>\n   <th style=\"text-align:right;\"> Weekly_Voyage_Count </th>\n   <th style=\"text-align:right;\"> Average_Load_Percentage </th>\n   <th style=\"text-align:right;\"> Net_Profit </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Profit </th>\n   <th style=\"text-align:right;\"> Profit_Margin </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Revenue </th>\n   <th style=\"text-align:right;\"> Weekly_Total_Operational_Cost </th>\n   <th style=\"text-align:right;\"> Cost_per_NM </th>\n   <th style=\"text-align:right;\"> Revenue_per_NM </th>\n   <th style=\"text-align:right;\"> Profit_per_NM </th>\n   <th style=\"text-align:right;\"> Cost_per_Ton </th>\n   <th style=\"text-align:right;\"> Revenue_per_Ton </th>\n   <th style=\"text-align:right;\"> Profit_per_Ton </th>\n   <th style=\"text-align:right;\"> Revenue_Leakage </th>\n   <th style=\"text-align:right;\"> Weekly_Revenue_Leakage </th>\n   <th style=\"text-align:right;\"> Voyage_Utilization_Score </th>\n   <th style=\"text-align:left;\"> Voyage_Performance_Label </th>\n   <th style=\"text-align:right;\"> Avg_Weekly_Freq_Ship_Route </th>\n   <th style=\"text-align:right;\"> Weekly_Frequency_Utilization_Score </th>\n   <th style=\"text-align:left;\"> Weekly_Frequency_Utilization_Label </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-11 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 10.38758 </td>\n   <td style=\"text-align:right;\"> 1796.0574 </td>\n   <td style=\"text-align:right;\"> 1060.4864 </td>\n   <td style=\"text-align:right;\"> 14.653083 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 162.3947 </td>\n   <td style=\"text-align:right;\"> 483388.0 </td>\n   <td style=\"text-align:right;\"> 883765.79 </td>\n   <td style=\"text-align:right;\"> 63.24820 </td>\n   <td style=\"text-align:right;\"> 0.2903614 </td>\n   <td style=\"text-align:right;\"> 0.8856478 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 93.89537 </td>\n   <td style=\"text-align:right;\"> 400377.79 </td>\n   <td style=\"text-align:right;\"> 2402266.7 </td>\n   <td style=\"text-align:right;\"> 0.4530361 </td>\n   <td style=\"text-align:right;\"> 5302594.72 </td>\n   <td style=\"text-align:right;\"> 2900328.0 </td>\n   <td style=\"text-align:right;\"> 455.81726 </td>\n   <td style=\"text-align:right;\"> 833.35892 </td>\n   <td style=\"text-align:right;\"> 377.54166 </td>\n   <td style=\"text-align:right;\"> 2976.62403 </td>\n   <td style=\"text-align:right;\"> 5442.08478 </td>\n   <td style=\"text-align:right;\"> 2465.4607 </td>\n   <td style=\"text-align:right;\"> 57458.22 </td>\n   <td style=\"text-align:right;\"> 344749.33 </td>\n   <td style=\"text-align:right;\"> 0.7777111 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 4.761905 </td>\n   <td style=\"text-align:right;\"> 1.1830817 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-18 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 20.74975 </td>\n   <td style=\"text-align:right;\"> 1648.5567 </td>\n   <td style=\"text-align:right;\"> 658.8741 </td>\n   <td style=\"text-align:right;\"> 7.199261 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 178.0409 </td>\n   <td style=\"text-align:right;\"> 448543.4 </td>\n   <td style=\"text-align:right;\"> 394018.75 </td>\n   <td style=\"text-align:right;\"> 49.41815 </td>\n   <td style=\"text-align:right;\"> 0.4995945 </td>\n   <td style=\"text-align:right;\"> 1.4058132 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 96.21824 </td>\n   <td style=\"text-align:right;\"> -54524.66 </td>\n   <td style=\"text-align:right;\"> -490721.9 </td>\n   <td style=\"text-align:right;\"> -0.1383809 </td>\n   <td style=\"text-align:right;\"> 3546168.72 </td>\n   <td style=\"text-align:right;\"> 4036890.6 </td>\n   <td style=\"text-align:right;\"> 680.77251 </td>\n   <td style=\"text-align:right;\"> 598.01823 </td>\n   <td style=\"text-align:right;\"> -82.75428 </td>\n   <td style=\"text-align:right;\"> 2519.32765 </td>\n   <td style=\"text-align:right;\"> 2213.07975 </td>\n   <td style=\"text-align:right;\"> -306.2479 </td>\n   <td style=\"text-align:right;\"> 15486.49 </td>\n   <td style=\"text-align:right;\"> 139378.38 </td>\n   <td style=\"text-align:right;\"> -0.1169623 </td>\n   <td style=\"text-align:left;\"> Loss </td>\n   <td style=\"text-align:right;\"> 5.058823 </td>\n   <td style=\"text-align:right;\"> 1.7117897 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-06-25 </td>\n   <td style=\"text-align:left;\"> Bulk Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 21.05510 </td>\n   <td style=\"text-align:right;\"> 915.2618 </td>\n   <td style=\"text-align:right;\"> 1126.8225 </td>\n   <td style=\"text-align:right;\"> 11.789062 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1737.3853 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 22.40911 </td>\n   <td style=\"text-align:right;\"> 0.7029057 </td>\n   <td style=\"text-align:right;\"> 1.3707043 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n   <td style=\"text-align:right;\"> 66.19370 </td>\n   <td style=\"text-align:right;\"> -173798.23 </td>\n   <td style=\"text-align:right;\"> -173798.2 </td>\n   <td style=\"text-align:right;\"> -1.9850999 </td>\n   <td style=\"text-align:right;\"> 87551.38 </td>\n   <td style=\"text-align:right;\"> 261349.6 </td>\n   <td style=\"text-align:right;\"> 231.93502 </td>\n   <td style=\"text-align:right;\"> 77.69757 </td>\n   <td style=\"text-align:right;\"> -154.23745 </td>\n   <td style=\"text-align:right;\"> 150.42697 </td>\n   <td style=\"text-align:right;\"> 50.39261 </td>\n   <td style=\"text-align:right;\"> -100.0344 </td>\n   <td style=\"text-align:right;\"> 44714.05 </td>\n   <td style=\"text-align:right;\"> 44714.05 </td>\n   <td style=\"text-align:right;\"> -0.4401900 </td>\n   <td style=\"text-align:left;\"> Loss </td>\n   <td style=\"text-align:right;\"> 5.056000 </td>\n   <td style=\"text-align:right;\"> 0.1309211 </td>\n   <td style=\"text-align:left;\"> Low </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-02 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 13.74278 </td>\n   <td style=\"text-align:right;\"> 1089.7218 </td>\n   <td style=\"text-align:right;\"> 1445.2812 </td>\n   <td style=\"text-align:right;\"> 9.727833 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 260.5951 </td>\n   <td style=\"text-align:right;\"> 287718.4 </td>\n   <td style=\"text-align:right;\"> 676121.46 </td>\n   <td style=\"text-align:right;\"> 64.15823 </td>\n   <td style=\"text-align:right;\"> 1.3313431 </td>\n   <td style=\"text-align:right;\"> 0.5833834 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 80.00858 </td>\n   <td style=\"text-align:right;\"> 388403.08 </td>\n   <td style=\"text-align:right;\"> 3107224.7 </td>\n   <td style=\"text-align:right;\"> 0.5744576 </td>\n   <td style=\"text-align:right;\"> 5408971.68 </td>\n   <td style=\"text-align:right;\"> 2301747.0 </td>\n   <td style=\"text-align:right;\"> 199.07433 </td>\n   <td style=\"text-align:right;\"> 467.81310 </td>\n   <td style=\"text-align:right;\"> 268.73877 </td>\n   <td style=\"text-align:right;\"> 1104.08205 </td>\n   <td style=\"text-align:right;\"> 2594.52864 </td>\n   <td style=\"text-align:right;\"> 1490.4466 </td>\n   <td style=\"text-align:right;\"> 168939.72 </td>\n   <td style=\"text-align:right;\"> 1351517.80 </td>\n   <td style=\"text-align:right;\"> 1.0800693 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 5.644927 </td>\n   <td style=\"text-align:right;\"> 1.1338828 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-09 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 18.61620 </td>\n   <td style=\"text-align:right;\"> 2171.6466 </td>\n   <td style=\"text-align:right;\"> 723.3042 </td>\n   <td style=\"text-align:right;\"> 14.916320 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1912.5098 </td>\n   <td style=\"text-align:right;\"> 184569.0 </td>\n   <td style=\"text-align:right;\"> 776698.35 </td>\n   <td style=\"text-align:right;\"> 47.47615 </td>\n   <td style=\"text-align:right;\"> 1.3702060 </td>\n   <td style=\"text-align:right;\"> 1.4377250 </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 53.17490 </td>\n   <td style=\"text-align:right;\"> 592129.31 </td>\n   <td style=\"text-align:right;\"> 4144905.2 </td>\n   <td style=\"text-align:right;\"> 0.7623671 </td>\n   <td style=\"text-align:right;\"> 5436888.48 </td>\n   <td style=\"text-align:right;\"> 1291983.3 </td>\n   <td style=\"text-align:right;\"> 255.17485 </td>\n   <td style=\"text-align:right;\"> 1073.81976 </td>\n   <td style=\"text-align:right;\"> 818.64490 </td>\n   <td style=\"text-align:right;\"> 96.50620 </td>\n   <td style=\"text-align:right;\"> 406.11472 </td>\n   <td style=\"text-align:right;\"> 309.6085 </td>\n   <td style=\"text-align:right;\"> 683950.16 </td>\n   <td style=\"text-align:right;\"> 4787651.15 </td>\n   <td style=\"text-align:right;\"> 1.7059424 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 4.795454 </td>\n   <td style=\"text-align:right;\"> 0.7762023 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-16 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Heavy Fuel Oil (HFO) </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 20.43312 </td>\n   <td style=\"text-align:right;\"> 2505.0435 </td>\n   <td style=\"text-align:right;\"> 270.1186 </td>\n   <td style=\"text-align:right;\"> 8.455264 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 1191.4364 </td>\n   <td style=\"text-align:right;\"> 434449.3 </td>\n   <td style=\"text-align:right;\"> 739431.83 </td>\n   <td style=\"text-align:right;\"> 29.04042 </td>\n   <td style=\"text-align:right;\"> 1.1203894 </td>\n   <td style=\"text-align:right;\"> 0.6029316 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 58.50864 </td>\n   <td style=\"text-align:right;\"> 304982.56 </td>\n   <td style=\"text-align:right;\"> 914947.7 </td>\n   <td style=\"text-align:right;\"> 0.4124553 </td>\n   <td style=\"text-align:right;\"> 2218295.48 </td>\n   <td style=\"text-align:right;\"> 1303347.8 </td>\n   <td style=\"text-align:right;\"> 1608.36493 </td>\n   <td style=\"text-align:right;\"> 2737.43407 </td>\n   <td style=\"text-align:right;\"> 1129.06914 </td>\n   <td style=\"text-align:right;\"> 364.64326 </td>\n   <td style=\"text-align:right;\"> 620.62215 </td>\n   <td style=\"text-align:right;\"> 255.9789 </td>\n   <td style=\"text-align:right;\"> 524367.65 </td>\n   <td style=\"text-align:right;\"> 1573102.95 </td>\n   <td style=\"text-align:right;\"> 0.4107295 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 5.644927 </td>\n   <td style=\"text-align:right;\"> 0.3109445 </td>\n   <td style=\"text-align:left;\"> Medium </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-07-23 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Critical </td>\n   <td style=\"text-align:right;\"> 23.49805 </td>\n   <td style=\"text-align:right;\"> 814.8065 </td>\n   <td style=\"text-align:right;\"> 1717.3284 </td>\n   <td style=\"text-align:right;\"> 9.283780 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 318.4493 </td>\n   <td style=\"text-align:right;\"> 348380.6 </td>\n   <td style=\"text-align:right;\"> 462211.40 </td>\n   <td style=\"text-align:right;\"> 52.47860 </td>\n   <td style=\"text-align:right;\"> 0.6959746 </td>\n   <td style=\"text-align:right;\"> 1.4086634 </td>\n   <td style=\"text-align:right;\"> 6 </td>\n   <td style=\"text-align:right;\"> 94.59197 </td>\n   <td style=\"text-align:right;\"> 113830.79 </td>\n   <td style=\"text-align:right;\"> 682984.8 </td>\n   <td style=\"text-align:right;\"> 0.2462743 </td>\n   <td style=\"text-align:right;\"> 2773268.41 </td>\n   <td style=\"text-align:right;\"> 2090283.6 </td>\n   <td style=\"text-align:right;\"> 202.86196 </td>\n   <td style=\"text-align:right;\"> 269.14561 </td>\n   <td style=\"text-align:right;\"> 66.28365 </td>\n   <td style=\"text-align:right;\"> 1093.99093 </td>\n   <td style=\"text-align:right;\"> 1451.44440 </td>\n   <td style=\"text-align:right;\"> 357.4535 </td>\n   <td style=\"text-align:right;\"> 26425.63 </td>\n   <td style=\"text-align:right;\"> 158553.75 </td>\n   <td style=\"text-align:right;\"> 0.3090723 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 5.200000 </td>\n   <td style=\"text-align:right;\"> 1.0914458 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-06 </td>\n   <td style=\"text-align:left;\"> Container Ship </td>\n   <td style=\"text-align:left;\"> Long-haul </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 23.22710 </td>\n   <td style=\"text-align:right;\"> 2685.4017 </td>\n   <td style=\"text-align:right;\"> 1588.7923 </td>\n   <td style=\"text-align:right;\"> 11.721261 </td>\n   <td style=\"text-align:left;\"> Calm </td>\n   <td style=\"text-align:right;\"> 1843.4383 </td>\n   <td style=\"text-align:right;\"> 149790.2 </td>\n   <td style=\"text-align:right;\"> 615230.86 </td>\n   <td style=\"text-align:right;\"> 63.74276 </td>\n   <td style=\"text-align:right;\"> 0.4406762 </td>\n   <td style=\"text-align:right;\"> 1.4355687 </td>\n   <td style=\"text-align:right;\"> 2 </td>\n   <td style=\"text-align:right;\"> 79.45133 </td>\n   <td style=\"text-align:right;\"> 465440.65 </td>\n   <td style=\"text-align:right;\"> 930881.3 </td>\n   <td style=\"text-align:right;\"> 0.7565301 </td>\n   <td style=\"text-align:right;\"> 1230461.71 </td>\n   <td style=\"text-align:right;\"> 299580.4 </td>\n   <td style=\"text-align:right;\"> 94.27929 </td>\n   <td style=\"text-align:right;\"> 387.23178 </td>\n   <td style=\"text-align:right;\"> 292.95249 </td>\n   <td style=\"text-align:right;\"> 81.25589 </td>\n   <td style=\"text-align:right;\"> 333.74096 </td>\n   <td style=\"text-align:right;\"> 252.4851 </td>\n   <td style=\"text-align:right;\"> 159118.49 </td>\n   <td style=\"text-align:right;\"> 318236.98 </td>\n   <td style=\"text-align:right;\"> 2.4687781 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 5.058823 </td>\n   <td style=\"text-align:right;\"> 0.3141099 </td>\n   <td style=\"text-align:left;\"> Medium </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-13 </td>\n   <td style=\"text-align:left;\"> Fish Carrier </td>\n   <td style=\"text-align:left;\"> Short-haul </td>\n   <td style=\"text-align:left;\"> Steam Turbine </td>\n   <td style=\"text-align:left;\"> Fair </td>\n   <td style=\"text-align:right;\"> 11.63511 </td>\n   <td style=\"text-align:right;\"> 2522.6972 </td>\n   <td style=\"text-align:right;\"> 1224.8463 </td>\n   <td style=\"text-align:right;\"> 10.900540 </td>\n   <td style=\"text-align:left;\"> Moderate </td>\n   <td style=\"text-align:right;\"> 1130.6046 </td>\n   <td style=\"text-align:right;\"> 299189.3 </td>\n   <td style=\"text-align:right;\"> 749334.91 </td>\n   <td style=\"text-align:right;\"> 47.66533 </td>\n   <td style=\"text-align:right;\"> 0.4378355 </td>\n   <td style=\"text-align:right;\"> 1.1052602 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n   <td style=\"text-align:right;\"> 70.50445 </td>\n   <td style=\"text-align:right;\"> 450145.58 </td>\n   <td style=\"text-align:right;\"> 4051310.3 </td>\n   <td style=\"text-align:right;\"> 0.6007268 </td>\n   <td style=\"text-align:right;\"> 6744014.23 </td>\n   <td style=\"text-align:right;\"> 2692704.0 </td>\n   <td style=\"text-align:right;\"> 244.26684 </td>\n   <td style=\"text-align:right;\"> 611.77875 </td>\n   <td style=\"text-align:right;\"> 367.51190 </td>\n   <td style=\"text-align:right;\"> 264.62772 </td>\n   <td style=\"text-align:right;\"> 662.77361 </td>\n   <td style=\"text-align:right;\"> 398.1459 </td>\n   <td style=\"text-align:right;\"> 313484.44 </td>\n   <td style=\"text-align:right;\"> 2821359.96 </td>\n   <td style=\"text-align:right;\"> 1.0607753 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 4.761905 </td>\n   <td style=\"text-align:right;\"> 1.3325341 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> 2023-08-20 </td>\n   <td style=\"text-align:left;\"> Tanker </td>\n   <td style=\"text-align:left;\"> Transoceanic </td>\n   <td style=\"text-align:left;\"> Diesel </td>\n   <td style=\"text-align:left;\"> Good </td>\n   <td style=\"text-align:right;\"> 18.25358 </td>\n   <td style=\"text-align:right;\"> 2129.5179 </td>\n   <td style=\"text-align:right;\"> 1311.9786 </td>\n   <td style=\"text-align:right;\"> 11.955648 </td>\n   <td style=\"text-align:left;\"> Rough </td>\n   <td style=\"text-align:right;\"> 441.2600 </td>\n   <td style=\"text-align:right;\"> 481866.3 </td>\n   <td style=\"text-align:right;\"> 738063.17 </td>\n   <td style=\"text-align:right;\"> 48.18567 </td>\n   <td style=\"text-align:right;\"> 1.2270642 </td>\n   <td style=\"text-align:right;\"> 0.9414481 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 65.98470 </td>\n   <td style=\"text-align:right;\"> 256196.91 </td>\n   <td style=\"text-align:right;\"> 1024787.6 </td>\n   <td style=\"text-align:right;\"> 0.3471206 </td>\n   <td style=\"text-align:right;\"> 2952252.69 </td>\n   <td style=\"text-align:right;\"> 1927465.0 </td>\n   <td style=\"text-align:right;\"> 367.28211 </td>\n   <td style=\"text-align:right;\"> 562.55733 </td>\n   <td style=\"text-align:right;\"> 195.27522 </td>\n   <td style=\"text-align:right;\"> 1092.02351 </td>\n   <td style=\"text-align:right;\"> 1672.62662 </td>\n   <td style=\"text-align:right;\"> 580.6031 </td>\n   <td style=\"text-align:right;\"> 380473.59 </td>\n   <td style=\"text-align:right;\"> 1521894.36 </td>\n   <td style=\"text-align:right;\"> 0.3508251 </td>\n   <td style=\"text-align:left;\"> High </td>\n   <td style=\"text-align:right;\"> 5.254237 </td>\n   <td style=\"text-align:right;\"> 0.5023352 </td>\n   <td style=\"text-align:left;\"> High </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_csv(ship_data, \"data/Updated_Ship_Data.csv\")\n```\n:::\n\n\n\n# Exploratory Data Analysis\n\n## Univariate Analysis - Histograms of Key Profitability Metrics\n\nThese histograms reveal key profitability patterns, highlighting profit distribution, cost variability, and revenue inefficiencies. Net Profit and Weekly Total Profit show whether voyages are mostly profitable or loss-making, while Operational Costs indicate potential inefficiencies. Revenue Leakage suggests lost income due to underutilization, and the skewness in Weekly Revenue and Costs underscores the need for better pricing and resource allocation. These insights directly support optimizing fleet management, cost reduction, and profit maximization in our shipping performance analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\n# Choose 8 columns that are more profitability-related\nmy_columns <- c(\n  \"Weekly_Total_Profit\",\n  \"Weekly_Total_Revenue\",\n  \"Weekly_Revenue_Leakage\",\n  \"Weekly_Total_Operational_Cost\",\n  \"Net_Profit\",\n  \"Revenue_per_Voyage_USD\",\n  \"Operational_Cost_USD\",\n  \"Revenue_Leakage\"\n)\n\n# Subset these columns and reshape to long format\nship_data_long <- ship_data %>%\n  select(all_of(my_columns)) %>%\n  pivot_longer(\n    cols = everything(),\n    names_to = \"Metric\",\n    values_to = \"Value\"\n  ) %>%\n  drop_na()\n\n# Draw histograms for each metric in a facet-wrap layout\nggplot(ship_data_long, aes(x = Value)) +\n  geom_histogram(bins = 30, fill = \"steelblue\", color = \"white\") +\n  facet_wrap(~ Metric, scales = \"free_x\", ncol = 2) +\n  labs(\n    title = \"Histograms of Key Profitability Metrics\",\n    x = NULL,\n    y = \"Count\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n## Data Distribution Insight\n\nBelow is a condensed overview of the Ship Type–only ridgelines alongside the more detailed Ship + Route breakdown:\n\n1.  Ship Type–Only Distributions\n\n-   Offers a high‐level look at how each vessel class trends in terms of net profit, operational costs, and revenue. For example, Tankers may peak at higher costs, whereas Bulk Carriers might sit somewhere in the moderate range. This macro view quickly shows which ship types are consistently profitable (distribution shifted to the right) or face more variance.\n\n2.  Ship & Route Combined Distributions\n\n-   Drills further into route type (short‐haul, long‐haul, etc.) within each ship class. You see not only how the vessel itself behaves financially, but also how those finances change according to route demands. Some short‐haul routes might yield fewer outliers or tighter profit margins, while long‐haul or transoceanic trips could show peaks at higher revenue but potentially higher costs.\n\nKey Insights\n\n-   Profitability Gaps: Net profit and profit margin curves highlight where certain ships/routes excel or struggle.\n\n-   Cost vs. Revenue: Operational cost curves often correlate with higher revenues—but not always enough to guarantee top‐tier profit.\n\n-   Revenue Leakage: Sharp right‐skew in weekly or per‐voyage leakage indicates a small subset of voyages experiencing disproportionately high lost revenue.\n\nOverall, ship‐only plots are great for broad, fleet‐wide comparisons, while the ship‐route ridgelines pinpoint exactly which combinations drive or drain profitability. This dual perspective helps direct strategic decisions: from general fleet allocation (which ship types to expand or optimize) down to route‐level optimization (improving high‐cost or under‐utilized segments).\n\n### By Ship\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Choose 8 key profitability-related columns\nmy_columns <- c(\n  \"Weekly_Total_Profit\",\n  \"Weekly_Total_Revenue\",\n  \"Weekly_Total_Operational_Cost\",\n  \"Weekly_Revenue_Leakage\",\n  \"Net_Profit\",\n  \"Profit_Margin\",\n  \"Revenue_per_Voyage_USD\",\n  \"Operational_Cost_USD\"\n\n)\n\n# Transform data into long format for plotting\nship_data_long <- ship_data %>%\n  select(Ship_Type, all_of(my_columns)) %>%\n  pivot_longer(\n    cols = -Ship_Type,  # Keep Ship_Type as a category\n    names_to = \"Metric\",\n    values_to = \"Value\"\n  ) %>%\n  drop_na()\n\n# Plot ridgeline density distributions\nggplot(ship_data_long, aes(x = Value, y = Ship_Type, fill = Ship_Type)) +\n  geom_density_ridges(alpha = 0.7, scale = 1) +\n  facet_wrap(~ Metric, scales = \"free_x\", ncol = 2) +  # Display 2 columns for better spacing\n  theme_minimal() +\n  labs(\n    title = \"Ridgeline Density of Key Profitability Metrics by Ship Type\",\n    x = \"Value\",\n    y = \"Ship Type\"\n  ) +\n  scale_x_continuous(labels = scales::dollar_format()) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=1152}\n:::\n:::\n\n\n\n### By Ship_Type and Route_Type\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggridges)\n\n# 1. Choose 8 key profitability-related columns\nmy_columns <- c(\n  \"Weekly_Total_Profit\",\n  \"Weekly_Total_Revenue\",\n  \"Weekly_Total_Operational_Cost\",\n  \"Weekly_Revenue_Leakage\",\n  \"Net_Profit\",\n  \"Profit_Margin\",\n  \"Revenue_per_Voyage_USD\",\n  \"Operational_Cost_USD\"\n)\n\n# 2. Combine Ship_Type and Route_Type into one column, then select + pivot\nship_data_long <- ship_data %>%\n  mutate(ShipRoute = paste(Ship_Type, Route_Type, sep = \" - \")) %>%\n  select(ShipRoute, all_of(my_columns)) %>%\n  pivot_longer(\n    cols = -ShipRoute,\n    names_to = \"Metric\",\n    values_to = \"Value\"\n  ) %>%\n  drop_na()\n\n# 3. Plot ridgeline density distributions, faceted by each metric\nggplot(ship_data_long, aes(x = Value, y = ShipRoute, fill = ShipRoute)) +\n  geom_density_ridges(alpha = 0.7, scale = 1) +\n  facet_wrap(~ Metric, scales = \"free_x\", ncol = 2) +  \n  theme_minimal() +\n  labs(\n    title = \"Ridgeline Density of Key Profitability Metrics by Ship & Route\",\n    x = \"Value\",\n    y = \"Ship - Route\"\n  ) +\n  scale_x_continuous(labels = scales::dollar_format()) +\n  theme(legend.position = \"none\")\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=1344}\n:::\n:::\n\n\n\n## Pairwise Correlation of Key Profit & Cost Features\n\nrom the scatterplot matrix and correlation coefficients, we see a strong positive relationship between weekly revenue and weekly profit, indicating that higher revenue strongly elevates profitability. Operational cost also correlates positively with weekly revenue—implying more expensive voyages tend to generate higher revenue, but not necessarily an equivalent rise in net profit. Profit margin shows a clear positive link with net profit as well, though it seems less influenced by distance or cargo weight. Seasonal impact and distance traveled have only mild correlations with these profit/cost variables, suggesting that while factors like seasonal conditions or route length do matter, they’re not the primary drivers of overall profitability. These insights highlight revenue and cost management—and maintaining a high profit margin—as pivotal to boosting total profits in the data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Update your numeric features with those most relevant to profit and cost:\nship_data_num <- ship_data %>%\n  select(\n    Weekly_Total_Profit,\n    Weekly_Total_Operational_Cost,\n    Weekly_Total_Revenue,\n    Net_Profit,        # or Profit_per_Voyage_USD if you prefer per-voyage metrics\n    Profit_Margin,\n    Cargo_Weight_tons,\n    Seasonal_Impact_Score,\n    Distance_Traveled_nm\n  ) %>%\n  na.omit()\n\n# Generate the pairwise scatterplot matrix with correlation coefficients\nggpairs(ship_data_num)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n## K-Mean Clustering\n\nBelow is a high‐level approach to perform K‐means clustering on Ship_Type and Route_Type but based on numeric profitability metrics (like revenue, cost, and profit). Because K‐means requires numeric features,first is to aggregate the dataset by (Ship_Type, Route_Type) and compute relevant revenue and cost statistics. Then clustering these route‐type/ship‐type combinations to discover natural groupings (e.g., high‐profit vs. low‐profit segments).\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_agg <- ship_data %>%\n  group_by(Ship_Type, Route_Type) %>%\n  summarise(\n    Avg_Revenue    = mean(Revenue_per_Voyage_USD, na.rm = TRUE),\n    Avg_Cost       = mean(Operational_Cost_USD, na.rm = TRUE),\n    Avg_Profit     = mean(Net_Profit, na.rm = TRUE),\n    Avg_Weekly_Rev = mean(Weekly_Total_Revenue, na.rm = TRUE),\n    Avg_Weekly_Cost= mean(Weekly_Total_Operational_Cost, na.rm = TRUE),\n    Avg_Weekly_Prof= mean(Weekly_Total_Profit, na.rm = TRUE),\n    .groups = \"drop\"\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_agg_numeric <- ship_agg %>%\n  select(-Ship_Type, -Route_Type)  # just keep numeric columns\n\n# Scale using base R (or use tidymodels recipe)\nship_agg_scaled <- scale(ship_agg_numeric) %>%\n  as.data.frame()  # convert matrix back to data frame\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(123)  # reproducibility\nk <- 3\nkmeans_model <- kmeans(ship_agg_scaled, centers = k, nstart = 10)\n\n# Store cluster assignments\nship_agg$Cluster <- factor(kmeans_model$cluster)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_agg %>%\n  arrange(Cluster) %>%\n  select(Ship_Type, Route_Type, Cluster, Avg_Revenue, Avg_Cost, Avg_Profit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 16 × 6\n   Ship_Type      Route_Type   Cluster Avg_Revenue Avg_Cost Avg_Profit\n   <chr>          <chr>        <fct>         <dbl>    <dbl>      <dbl>\n 1 Bulk Carrier   Short-haul   1           528879.  252698.    276182.\n 2 Container Ship Coastal      1           506958.  244700.    262258.\n 3 Container Ship Transoceanic 1           516478.  269646.    246832.\n 4 Tanker         Coastal      1           491895.  245949.    245946.\n 5 Tanker         Long-haul    1           513297.  255736.    257561.\n 6 Tanker         Short-haul   1           503680.  242336.    261345.\n 7 Bulk Carrier   Long-haul    2           542952.  241694.    301258.\n 8 Container Ship Short-haul   2           555488.  250784.    304704.\n 9 Fish Carrier   Coastal      2           556015.  248327.    307687.\n10 Fish Carrier   Long-haul    2           547880.  248427.    299453.\n11 Bulk Carrier   Coastal      3           504851.  265976.    238875.\n12 Bulk Carrier   Transoceanic 3           514263.  262084.    252179.\n13 Container Ship Long-haul    3           525549.  276498.    249051.\n14 Fish Carrier   Short-haul   3           528934.  292335.    236599.\n15 Fish Carrier   Transoceanic 3           508785.  250480.    258305.\n16 Tanker         Transoceanic 3           540962.  264517.    276446.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nship_agg %>%\n  group_by(Cluster) %>%\n  summarise(\n    Avg_of_Avg_Revenue = mean(Avg_Revenue),\n    Avg_of_Avg_Cost    = mean(Avg_Cost),\n    Avg_of_Avg_Profit  = mean(Avg_Profit),\n    .groups = \"drop\"\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 4\n  Cluster Avg_of_Avg_Revenue Avg_of_Avg_Cost Avg_of_Avg_Profit\n  <fct>                <dbl>           <dbl>             <dbl>\n1 1                  510198.         251844.           258354.\n2 2                  550584.         247308.           303276.\n3 3                  520557.         268648.           251909.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(factoextra)\n\nfviz_cluster(\n  object    = kmeans_model,\n  data      = ship_agg_scaled,\n  geom      = \"point\",\n  ellipse.type = \"norm\",\n  main      = paste(\"K-Means Clustering (k =\", k, \")\")\n)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n\n### Clustering Conclusion\n\nBy clustering Ship_Type + Route_Type combinations on their average revenue, cost, and profit, three distinct groups emerged: - Cluster 1 exhibits moderate revenue (around 510k) and cost (about 252k), resulting in a middle‐of‐the‐pack average profit. - Cluster 2 stands out for relatively higher average revenue (\\~551k) and the lowest cost (\\~247k), yielding the highest profit among the three clusters. - Cluster 3 shows slightly lower revenue (\\~521k) than Cluster 2 but higher cost (\\~269k), which lowers average profit compared to Cluster 2. Overall, Cluster 2 represents the most profitable “sweet spot,” suggesting that those ship–route combinations manage cost and generate revenue more effectively. Cluster 1 also operates decently, but may have room to optimize revenue or reduce costs further. Cluster 3, with elevated costs, may need special attention—either via cost‐reduction measures or route adjustments—to improve profit margins.\n\n## Numeric Variable Distributions\n\nThese univariate density plots serve primarily as context for understanding how the numeric data is shaped—whether it’s skewed, multimodal, or contains extreme outliers. While they don’t directly solve profitability or operational questions, they do inform how best to prepare and interpret variables. For instance, highly skewed distributions (like Cost_per_NM) might require log transformations or outlier handling before further modeling. Beyond that, these plots act as a reference—helping confirm which metrics have mostly normal or uniform ranges, and which demand extra caution or pre‐processing steps in advanced analyses.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  ExpNumViz(target=NULL,\n            nlim=10,\n            Page=c(2,2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`0`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-31-7.png){width=672}\n:::\n:::\n\n\n\n## Pairwise Visualization with Net Profit\n\nThese scatter plots compare Net_Profit to each numeric variable, giving a quick look at how profit relates (or doesn’t) to operational metrics such as distance traveled, cost, or revenue. Most features show no strong linear pattern with Net Profit, though some variables—like Operational_Cost_USD and Revenue_per_Voyage_USD—naturally form clearer positive or negative relationships (for example, higher revenue tends to coincide with higher net profit, while high operational costs often correlate with lower or negative net profit). By scanning across all charts, you can identify any notable clusters, outliers, or trends, guiding further analysis into which operational factors drive or hinder profitability.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  ExpNumViz(target=\"Net_Profit\",\n            nlim=10,\n            Page=c(2,2)) #, theme=\"default\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`0`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-32-7.png){width=672}\n:::\n:::\n\n\n\n## Categorical Feature Summary\n\nMost categorical features appear fairly balanced, with Ship_Type, Engine_Type, and Route_Type all splitting near evenly among their categories. Weather_Condition also has no single category overwhelmingly dominant, though “Calm” and “Moderate” lead slightly. Notably, Weekly_Frequency_Utilization_Label is highly skewed, with nearly 80% of voyages classified as “High,” while Voyage_Performance_Label is similarly dominated by “High” at around 69%. Weekly_Voyage_Count spreads evenly from 1 to 9 (about 10–12% each), indicating no single frequency bucket stands out significantly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nship_data %>%\n  ExpCatViz(target=NULL,\n            col = \"sky blue\",\n            clim=10,\n            margin=2,\n            Page=c(2,2),\n            sample=8)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$`0`\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-33-1.png){width=1152}\n:::\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-33-2.png){width=1152}\n:::\n:::\n\n\n\n## Boxplots of Key Financial Metrics\n\nThese boxplots provide a concise overview of the distribution and potential outliers in net profit, revenue, operational cost, and profit margin. Visually, you can see where most voyages cluster (the boxes) along with any extreme values (the outliers). For instance, if the net profit boxplot shows a long upper whisker or multiple outliers, it suggests a small number of highly profitable voyages skewing the distribution. Conversely, a collection of outliers below the box indicates that certain voyages are particularly unprofitable or costly. Such deviations from the bulk of the data prompt further investigation into route choices, operational constraints, or pricing strategies that may be causing significant performance differences.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(scales)\n\n# 1. Determine a common scale range for Net Profit, Revenue, and Cost\ncommon_min <- 0\ncommon_max <- max(\n  ship_data$Net_Profit,\n  ship_data$Revenue_per_Voyage_USD,\n  ship_data$Operational_Cost_USD,\n  na.rm = TRUE\n)\n\n# 2. Build the boxplots for p1, p2, p3 with the same y-axis limits\np1 <- ggplot(ship_data, aes(y = Net_Profit)) +\n  geom_boxplot(fill = \"steelblue\", alpha = 0.7, outlier.shape = 19) +\n  scale_y_continuous(\n    limits = c(common_min, common_max),\n    labels = comma_format(scale = 1/1000, suffix = \"K\"),\n    name   = \"Net Profit (in thousands USD)\"\n  ) +\n  theme_minimal() +\n  labs(title = \"Net Profit\")\n\np2 <- ggplot(ship_data, aes(y = Revenue_per_Voyage_USD)) +\n  geom_boxplot(fill = \"salmon\", alpha = 0.7, outlier.shape = 19) +\n  scale_y_continuous(\n    limits = c(common_min, common_max),\n    labels = comma_format(scale = 1/1000, suffix = \"K\"),\n    name   = \"Revenue (in thousands USD)\"\n  ) +\n  theme_minimal() +\n  labs(title = \"Revenue per Voyage\")\n\np3 <- ggplot(ship_data, aes(y = Operational_Cost_USD)) +\n  geom_boxplot(fill = \"darkgreen\", alpha = 0.7, outlier.shape = 19) +\n  scale_y_continuous(\n    limits = c(common_min, common_max),\n    labels = comma_format(scale = 1/1000, suffix = \"K\"),\n    name   = \"Cost (in thousands USD)\"\n  ) +\n  theme_minimal() +\n  labs(title = \"Operational Cost per Voyage\")\n\n# 3. Profit Margin uses its original scale\np4 <- ggplot(ship_data, aes(y = Profit_Margin)) +\n  geom_boxplot(fill = \"orchid\", alpha = 0.7, outlier.shape = 19) +\n  labs(\n    title = \"Profit Margin\",\n    y = \"Ratio (e.g., 0.2 = 20%)\"\n  ) +\n  theme_minimal()\n\n# 4. Arrange p1, p2, p3 in one row, and p4 in another\n(p1 + p2 + p3) /\n  p4\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/shared-scales-1.png){width=1152}\n:::\n:::\n\n\n\n## Weekly Totals & Revenue Leakage Boxplots\n\nThese four boxplots give a clear snapshot of how each voyage’s weekly revenue, costs, profit, and potential revenue loss compare across the dataset. The Weekly Total Revenue and Weekly Total Operational Cost plots help identify whether certain weeks stand out for unusually high or low financial throughput, while the Weekly Total Profit plot highlights weeks where cost efficiency translates into strong bottom lines—or where repeated unprofitable voyages magnify losses. The Revenue Leakage boxplot pinpoints how much potential revenue is lost if load factors are suboptimal, shining a light on opportunities to better utilize capacity.\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(patchwork)\nlibrary(scales)\n\n# 1. Compute a shared y-range based on the max across all columns of interest\ny_min <- 0\ny_max <- max(\n  ship_data$Weekly_Total_Revenue,\n  ship_data$Weekly_Total_Operational_Cost,\n  ship_data$Weekly_Total_Profit,\n  ship_data$Weekly_Revenue_Leakage,\n  na.rm = TRUE\n)\n\n# 2. Define helper for scale in thousands\nscale_thousands <- scale_y_continuous(\n  limits = c(y_min, y_max),\n  labels = comma_format(scale = 1/1000, suffix = \"K\")\n)\n\n# 3. Build each boxplot using the common y scale\np1 <- ggplot(ship_data, aes(y = Weekly_Total_Revenue)) +\n  geom_boxplot(fill = \"steelblue\", alpha = 0.7, outlier.shape = 19) +\n  scale_thousands +\n  labs(\n    title = \"Weekly Total Revenue\",\n    y = \"Revenue (in thousands USD)\"\n  ) +\n  theme_minimal()\n\np2 <- ggplot(ship_data, aes(y = Weekly_Total_Operational_Cost)) +\n  geom_boxplot(fill = \"salmon\", alpha = 0.7, outlier.shape = 19) +\n  scale_thousands +\n  labs(\n    title = \"Weekly Total Operational Cost\",\n    y = \"Cost (in thousands USD)\"\n  ) +\n  theme_minimal()\n\np3 <- ggplot(ship_data, aes(y = Weekly_Total_Profit)) +\n  geom_boxplot(fill = \"darkgreen\", alpha = 0.7, outlier.shape = 19) +\n  scale_thousands +\n  labs(\n    title = \"Weekly Total Profit\",\n    y = \"Profit (in thousands USD)\"\n  ) +\n  theme_minimal()\n\np4 <- ggplot(ship_data, aes(y = Weekly_Revenue_Leakage)) +\n  geom_boxplot(fill = \"orchid\", alpha = 0.7, outlier.shape = 19) +\n  scale_thousands +\n  labs(\n    title = \"Weekly Revenue Leakage\",\n    y = \"Leakage (in thousands USD)\"\n  ) +\n  theme_minimal()\n\n# 4. Arrange them in a single row (4 columns)\n(p1 + p2 + p3 + p4) +\n  plot_layout(ncol = 4)\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/boxplots-uniform-scale-1.png){width=1536}\n:::\n:::\n\n\n\n## Revenue Distribution Across Ship Type, Route, Engine Type, and Weather Conditions\n\nThese boxplots illustrate how revenue per voyage varies across Ship Type, Route Type, Engine Type, and Weather Conditions. The facets allow for a detailed comparison:\n\n-   Route Type (rows): Shows how different shipping routes impact revenue distribution.\n\n-   Engine Type (columns): Compares revenue performance across Diesel, HFO, and Steam Turbine engines.\n\n-   Weather Conditions (box colors): Highlights revenue variations under Calm, Moderate, and Rough conditions.\n\nThis visualization helps identify which ship-route-engine-weather combinations yield higher or more stable revenue and where variability or inefficiencies may exist.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ship_data, aes(x = Ship_Type, y = Revenue_per_Voyage_USD / 1e6, fill = Ship_Type)) +\n  geom_boxplot() +\n  facet_grid(Route_Type ~ Engine_Type, scales = \"free\") +  # Split by Route & Engine Type\n  theme_minimal() +\n  labs(title = \"Revenue Distribution by Ship Type, Route Type, and Engine Type\",\n       x = \"Ship Type\",\n       y = \"Revenue per Voyage (Million USD)\") +  # Updated y-axis label\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-34-1.png){width=1536}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ship_data, aes(x = Ship_Type, y = Revenue_per_Voyage_USD / 1e6, fill = Weather_Condition)) +\n  geom_boxplot() +\n  facet_grid(Route_Type ~ Engine_Type, scales = \"free\") +  # Facet by Route Type (rows) & Engine Type (columns)\n  theme_minimal() +\n  labs(title = \"Revenue Distribution by Ship Type, Route Type, Engine Type, and Weather Condition\",\n       x = \"Ship Type\",\n       y = \"Revenue per Voyage (Million USD)\",\n       fill = \"Weather Condition\") +  # Updated legend title\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels for readability\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-35-1.png){width=2304}\n:::\n:::\n\n\n\n## Smoothed Revenue Trends by Operational Cost (Overall and Faceted by Ship Type)\n\nThis visualization presents smoothed revenue trends relative to operational costs, first across all ship types and then faceted by individual ship categories.\n\n1.  Overall Trends (First Plot)\n\n    -   Shows how revenue per voyage changes with operational costs for different ship types (Bulk Carrier, Container Ship, Fish Carrier, Tanker).\n\n    -   Some ships, like Fish Carriers, exhibit nonlinear revenue patterns, while others, like Bulk Carriers, maintain relatively stable trends.\n\n2.  Faceted Trends by Ship Type (Second Plot)\n\n    -   Splits the analysis by ship type, making it easier to compare the impact of route types (Coastal, Long-haul, Short-haul, Transoceanic) within each ship category.\n\n    -   This helps identify whether certain routes consistently maximize revenue at specific cost levels.\n\nKey Insights\n\n-   Fish Carriers and Container Ships show volatile trends, with sharp peaks and dips, suggesting cost-sensitive revenue swings.\n\n-   Tankers and Bulk Carriers follow more gradual revenue shifts, indicating that their operational costs and revenue generation may be more stable.\n\n-   Route Type Differences: Coastal routes often have lower operational costs, while transoceanic routes may require higher spending but can also yield higher revenue.\n\nThis analysis provides valuable insights for cost optimization and route planning, helping decision-makers refine pricing strategies, fleet deployment, and operational efficiency across different ship and route types.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(ship_data, aes(x = Operational_Cost_USD, y = Revenue_per_Voyage_USD, color = Ship_Type)) +\n  geom_smooth(method = \"loess\", se = FALSE, linewidth = 1.2) +  # LOESS smooth to capture trends\n  theme_minimal() +\n  labs(\n    title = \"Smoothed Revenue Trends by Operational Cost\",\n    x = \"Operational Cost (K USD)\",\n    y = \"Revenue per Voyage (K USD)\"\n  ) +\n  scale_x_continuous(labels = label_number(scale = 1/1000, suffix = \"K\")) + \n  scale_y_continuous(labels = label_number(scale = 1/1000, suffix = \"K\"))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-36-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a new column combining Ship_Type and Route_Type\nship_data <- ship_data %>%\n  mutate(ShipRoute = paste(Route_Type, sep = \" - \"))\n\nggplot(ship_data, aes(x = Operational_Cost_USD, y = Revenue_per_Voyage_USD, color = ShipRoute)) +\n  geom_smooth(method = \"loess\", se = FALSE, linewidth = 1.2) +  # LOESS smoothing\n  facet_wrap(~ Ship_Type, scales = \"free_x\", ncol = 2) +  # Facet by Ship Type, 2 columns\n  theme_minimal() +\n  labs(\n    title = \"Smoothed Revenue Trends by Operational Cost (Faceted by Ship Type)\",\n    x = \"Operational Cost (K USD)\",\n    y = \"Revenue per Voyage (K USD)\",\n    color = \"Route Type\"\n  ) +\n  scale_x_continuous(labels = label_number(scale = 1/1000, suffix = \"K\")) + \n  scale_y_continuous(labels = label_number(scale = 1/1000, suffix = \"K\")) +\n  theme(\n    legend.position = \"bottom\",\n    strip.text = element_text(size = 14, face = \"bold\"),  # Increase facet label size\n    panel.spacing = unit(2, \"lines\")  # Add spacing between facets\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-37-1.png){width=1152}\n:::\n:::\n\n\n\n# Quarterly Sales vs. Profit by Ship-Route\n\nThis bubble chart not only shows which ship–route pairs generate high or low revenue and profit, but also how deeply each segment impacts overall performance (via bubble size). Large, dark‐blue bubbles in the top‐right reflect routes delivering both strong sales and robust profit, signaling prime candidates for fleet expansion or replication of best practices. Conversely, large, dark‐red bubbles in the bottom‐left highlight routes draining resources—high‐priority for cost reduction, operational fixes, or reallocation of assets.\n\nSeveral key insights emerge:\n\n1.  Clustered High Performers: If you see multiple ship–route combos grouped together in the top‐right quadrant, it suggests common traits (e.g., route distance, cargo type, or maintenance strategy) that drive success. Replicating these traits in underperforming areas can boost overall margins.\n\n2.  Unexpected Low Profit Despite High Sales: Bubbles in the bottom‐right quadrant indicate possible inefficiencies (fuel cost, cargo handling, or port fees) that erode profits. Tackling these inefficiencies can turn high‐revenue voyages into solid profit contributors.\n\n3.  Niche Profit Scenarios: Small, dark‐blue bubbles in the top‐left quadrant show voyages that quietly generate healthy margins without massive sales. These might be specialized cargo or short‐haul routes where cost discipline yields strong returns.\n\n4.  Strategic Repositioning: Large red bubbles anywhere indicate hefty losses. Whether that’s due to low sales or negative profit, management should consider route optimization, pricing changes, or even withdrawing service from unsustainably unprofitable segments.\n\nOverall, the chart provides actionable intelligence for allocating resources, refining pricing, and guiding fleet deployment decisions. By pinpointing exactly which ship–route combos drive or undermine profitability, stakeholders can focus investment on the strongest segments and rapidly address cost drivers in underperforming ones—ensuring better operational efficiency and maximized returns in the quarters to come.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(plotly)\n\n# Convert Date to a proper Date object if necessary (assumes \"YYYY-MM-DD\" format)\nship_data <- ship_data %>%\n  mutate(Date = as.Date(Date, format = \"%Y-%m-%d\"))\n\n# Aggregate data quarterly by Ship_Type and Route_Type\nship_data_quarterly <- ship_data %>%\n  mutate(\n    Quarter = paste0(year(Date), \"-Q\", quarter(Date)),\n    ShipRoute = paste(Ship_Type, Route_Type, sep = \" - \")\n  ) %>%\n  group_by(Quarter, Ship_Type, Route_Type, ShipRoute) %>%\n  summarise(\n    Quarterly_Total_Revenue = sum(Weekly_Total_Revenue, na.rm = TRUE) / 1e6,  # in Million USD\n    Quarterly_Net_Profit    = sum(Net_Profit, na.rm = TRUE) / 1e6            # in Million USD\n  ) %>%\n  ungroup() %>%\n  mutate(\n    Sales_Percentile  = percent_rank(Quarterly_Total_Revenue) * 100,\n    Profit_Percentile = percent_rank(Quarterly_Net_Profit)    * 100\n  )\n\n# Create Bubble Chart:\n#  - X-axis: Sales_Percentile\n#  - Y-axis: Profit_Percentile\n#  - Bubble size: absolute profit magnitude\n#  - Bubble color: sign and magnitude of profit (red for negative, blue for positive)\n\np <- ggplot(ship_data_quarterly, aes(\n  x    = Sales_Percentile,\n  y    = Profit_Percentile,\n  size = abs(Quarterly_Net_Profit),        # Bubble size: absolute profit\n  color = Quarterly_Net_Profit,           # Bubble color: negative to positive\n  text = paste(\n    \"Ship-Route:\", ShipRoute, \"<br>\",\n    \"Quarter:\", Quarter, \"<br>\",\n    \"Sales (M):\", round(Quarterly_Total_Revenue, 2), \"<br>\",\n    \"Profit (M):\", round(Quarterly_Net_Profit, 2)\n  )\n)) +\n  # Slight transparency to reduce overlap\n  geom_point(alpha = 0.6) +\n  \n  # Quadrant reference lines\n  geom_hline(yintercept = 50, linetype = \"dashed\", color = \"gray40\") +\n  geom_vline(xintercept = 50, linetype = \"dashed\", color = \"gray40\") +\n  \n  # Quadrant labels (slightly smaller text)\n  annotate(\"text\", x =  5, y = 90, label = \"Low Sales\\nHigh Profits\",  hjust = 0, size = 4) +\n  annotate(\"text\", x = 75, y = 90, label = \"High Sales\\nHigh Profits\", hjust = 0, size = 4) +\n  annotate(\"text\", x =  5, y = 10, label = \"Low Sales\\nLow Profits\",   hjust = 0, size = 4) +\n  annotate(\"text\", x = 75, y = 10, label = \"High Sales\\nLow Profits\",  hjust = 0, size = 4) +\n  \n  # Percent-based axes\n  scale_x_continuous(labels = label_percent(scale = 1), limits = c(0, 100)) +\n  scale_y_continuous(labels = label_percent(scale = 1), limits = c(0, 120)) +\n  \n  # Bubble size & color scales\n  scale_size_continuous(range = c(2, 12), name = \"Profit Magnitude (Million)\") +\n  scale_color_gradient2(\n    low = \"red\", mid = \"white\", high = \"blue\",\n    midpoint = 0,\n    name = \"Profit (Million)\"\n  ) +\n  \n  # Labels & theme\n  labs(\n    title = \"Quarterly Sales vs Profit by Ship & Route\",\n    x     = \"Percentile of Quarterly Sales\",\n    y     = \"Percentile of Quarterly Profit\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position = \"right\",\n    panel.grid.minor = element_blank()  # Remove minor grid lines for less clutter\n  )\n\n# Convert to interactive plot with hover tooltips\nggplotly(p, tooltip = \"text\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-8e1fe96c0688a849169a\" style=\"width:100%;height:487px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-8e1fe96c0688a849169a\">{\"x\":{\"data\":[{\"x\":[15.18987341772152,10.126582278481013,8.8607594936708853,3.79746835443038,0,5.0632911392405067,13.924050632911392,6.3291139240506329,7.59493670886076,1.2658227848101267,17.721518987341771,21.518987341772153,12.658227848101266,16.455696202531644,11.39240506329114,2.5316455696202533,37.974683544303801,100,79.74683544303798,50.632911392405063,18.9873417721519,82.278481012658233,32.911392405063289,20.253164556962027,25.316455696202532,22.784810126582279,75.949367088607602,87.341772151898738,45.569620253164558,63.291139240506332,60.75949367088608,58.22784810126582,62.025316455696199,34.177215189873415,97.468354430379748,24.050632911392405,94.936708860759495,93.670886075949369,70.886075949367083,56.962025316455701,65.822784810126578,78.48101265822784,43.037974683544306,46.835443037974684,30.37974683544304,39.24050632911392,77.215189873417728,41.77215189873418,64.556962025316452,53.164556962025308,59.493670886075947,81.012658227848107,49.367088607594937,74.683544303797461,40.506329113924053,89.87341772151899,88.60759493670885,69.620253164556971,35.443037974683541,68.35443037974683,48.101265822784811,96.202531645569621,36.708860759493675,44.303797468354425,86.075949367088612,92.405063291139243,72.151898734177209,67.088607594936718,51.898734177215189,91.139240506329116,31.645569620253166,54.430379746835442,73.417721518987349,98.734177215189874,27.848101265822784,83.544303797468359,55.696202531645568,26.582278481012654,29.11392405063291,84.810126582278471],\"y\":[16.455696202531644,11.39240506329114,8.8607594936708853,1.2658227848101267,3.79746835443038,6.3291139240506329,12.658227848101266,10.126582278481013,2.5316455696202533,0,15.18987341772152,21.518987341772153,7.59493670886076,17.721518987341771,13.924050632911392,5.0632911392405067,41.77215189873418,100,89.87341772151899,39.24050632911392,37.974683544303801,93.670886075949369,18.9873417721519,27.848101265822784,49.367088607594937,29.11392405063291,34.177215189873415,75.949367088607602,74.683544303797461,82.278481012658233,65.822784810126578,43.037974683544306,53.164556962025308,36.708860759493675,97.468354430379748,32.911392405063289,91.139240506329116,63.291139240506332,87.341772151898738,40.506329113924053,68.35443037974683,70.886075949367083,58.22784810126582,22.784810126582279,26.582278481012654,51.898734177215189,56.962025316455701,31.645569620253166,60.75949367088608,30.37974683544304,81.012658227848107,62.025316455696199,45.569620253164558,72.151898734177209,69.620253164556971,92.405063291139243,94.936708860759495,88.60759493670885,35.443037974683541,67.088607594936718,64.556962025316452,79.74683544303798,73.417721518987349,54.430379746835442,48.101265822784811,96.202531645569621,46.835443037974684,83.544303797468359,78.48101265822784,59.493670886075947,20.253164556962027,44.303797468354425,84.810126582278471,98.734177215189874,25.316455696202532,55.696202531645568,77.215189873417728,24.050632911392405,50.632911392405063,86.075949367088612],\"text\":[\"Ship-Route: Bulk Carrier - Coastal <br> Quarter: 2023-Q2 <br> Sales (M): 38.03 <br> Profit (M): 3.73\",\"Ship-Route: Bulk Carrier - Long-haul <br> Quarter: 2023-Q2 <br> Sales (M): 20.92 <br> Profit (M): 2.86\",\"Ship-Route: Bulk Carrier - Short-haul <br> Quarter: 2023-Q2 <br> Sales (M): 20.59 <br> Profit (M): 2.5\",\"Ship-Route: Bulk Carrier - Transoceanic <br> Quarter: 2023-Q2 <br> Sales (M): 14.93 <br> Profit (M): 0.94\",\"Ship-Route: Container Ship - Coastal <br> Quarter: 2023-Q2 <br> Sales (M): 5.4 <br> Profit (M): 1.81\",\"Ship-Route: Container Ship - Long-haul <br> Quarter: 2023-Q2 <br> Sales (M): 16.36 <br> Profit (M): 2.4\",\"Ship-Route: Container Ship - Short-haul <br> Quarter: 2023-Q2 <br> Sales (M): 32.67 <br> Profit (M): 2.96\",\"Ship-Route: Container Ship - Transoceanic <br> Quarter: 2023-Q2 <br> Sales (M): 16.96 <br> Profit (M): 2.76\",\"Ship-Route: Fish Carrier - Coastal <br> Quarter: 2023-Q2 <br> Sales (M): 17.5 <br> Profit (M): 1.72\",\"Ship-Route: Fish Carrier - Long-haul <br> Quarter: 2023-Q2 <br> Sales (M): 8.17 <br> Profit (M): 0.76\",\"Ship-Route: Fish Carrier - Short-haul <br> Quarter: 2023-Q2 <br> Sales (M): 40.37 <br> Profit (M): 3.49\",\"Ship-Route: Fish Carrier - Transoceanic <br> Quarter: 2023-Q2 <br> Sales (M): 52.75 <br> Profit (M): 5.52\",\"Ship-Route: Tanker - Coastal <br> Quarter: 2023-Q2 <br> Sales (M): 26.61 <br> Profit (M): 2.41\",\"Ship-Route: Tanker - Long-haul <br> Quarter: 2023-Q2 <br> Sales (M): 39.16 <br> Profit (M): 4.85\",\"Ship-Route: Tanker - Short-haul <br> Quarter: 2023-Q2 <br> Sales (M): 25.62 <br> Profit (M): 3.18\",\"Ship-Route: Tanker - Transoceanic <br> Quarter: 2023-Q2 <br> Sales (M): 10.93 <br> Profit (M): 1.98\",\"Ship-Route: Bulk Carrier - Coastal <br> Quarter: 2023-Q3 <br> Sales (M): 67.42 <br> Profit (M): 6.69\",\"Ship-Route: Bulk Carrier - Long-haul <br> Quarter: 2023-Q3 <br> Sales (M): 123.03 <br> Profit (M): 14.15\",\"Ship-Route: Bulk Carrier - Short-haul <br> Quarter: 2023-Q3 <br> Sales (M): 88.73 <br> Profit (M): 10.24\",\"Ship-Route: Bulk Carrier - Transoceanic <br> Quarter: 2023-Q3 <br> Sales (M): 73.76 <br> Profit (M): 6.59\",\"Ship-Route: Container Ship - Coastal <br> Quarter: 2023-Q3 <br> Sales (M): 50.52 <br> Profit (M): 6.57\",\"Ship-Route: Container Ship - Long-haul <br> Quarter: 2023-Q3 <br> Sales (M): 91.88 <br> Profit (M): 11.13\",\"Ship-Route: Container Ship - Short-haul <br> Quarter: 2023-Q3 <br> Sales (M): 61.09 <br> Profit (M): 5\",\"Ship-Route: Container Ship - Transoceanic <br> Quarter: 2023-Q3 <br> Sales (M): 51.79 <br> Profit (M): 6.03\",\"Ship-Route: Fish Carrier - Coastal <br> Quarter: 2023-Q3 <br> Sales (M): 57.61 <br> Profit (M): 7.13\",\"Ship-Route: Fish Carrier - Long-haul <br> Quarter: 2023-Q3 <br> Sales (M): 55.48 <br> Profit (M): 6.05\",\"Ship-Route: Fish Carrier - Short-haul <br> Quarter: 2023-Q3 <br> Sales (M): 87.28 <br> Profit (M): 6.26\",\"Ship-Route: Fish Carrier - Transoceanic <br> Quarter: 2023-Q3 <br> Sales (M): 94.06 <br> Profit (M): 8.65\",\"Ship-Route: Tanker - Coastal <br> Quarter: 2023-Q3 <br> Sales (M): 72.49 <br> Profit (M): 8.52\",\"Ship-Route: Tanker - Long-haul <br> Quarter: 2023-Q3 <br> Sales (M): 80.9 <br> Profit (M): 9.75\",\"Ship-Route: Tanker - Short-haul <br> Quarter: 2023-Q3 <br> Sales (M): 79.68 <br> Profit (M): 8.29\",\"Ship-Route: Tanker - Transoceanic <br> Quarter: 2023-Q3 <br> Sales (M): 77.21 <br> Profit (M): 6.88\",\"Ship-Route: Bulk Carrier - Coastal <br> Quarter: 2023-Q4 <br> Sales (M): 80.21 <br> Profit (M): 7.46\",\"Ship-Route: Bulk Carrier - Long-haul <br> Quarter: 2023-Q4 <br> Sales (M): 65.04 <br> Profit (M): 6.55\",\"Ship-Route: Bulk Carrier - Short-haul <br> Quarter: 2023-Q4 <br> Sales (M): 109.67 <br> Profit (M): 12\",\"Ship-Route: Bulk Carrier - Transoceanic <br> Quarter: 2023-Q4 <br> Sales (M): 55.87 <br> Profit (M): 6.2\",\"Ship-Route: Container Ship - Coastal <br> Quarter: 2023-Q4 <br> Sales (M): 105.67 <br> Profit (M): 10.25\",\"Ship-Route: Container Ship - Long-haul <br> Quarter: 2023-Q4 <br> Sales (M): 104.68 <br> Profit (M): 8.23\",\"Ship-Route: Container Ship - Short-haul <br> Quarter: 2023-Q4 <br> Sales (M): 84.27 <br> Profit (M): 10.16\",\"Ship-Route: Container Ship - Transoceanic <br> Quarter: 2023-Q4 <br> Sales (M): 77.21 <br> Profit (M): 6.6\",\"Ship-Route: Fish Carrier - Coastal <br> Quarter: 2023-Q4 <br> Sales (M): 82.41 <br> Profit (M): 8.38\",\"Ship-Route: Fish Carrier - Long-haul <br> Quarter: 2023-Q4 <br> Sales (M): 88.59 <br> Profit (M): 8.42\",\"Ship-Route: Fish Carrier - Short-haul <br> Quarter: 2023-Q4 <br> Sales (M): 69.54 <br> Profit (M): 7.69\",\"Ship-Route: Fish Carrier - Transoceanic <br> Quarter: 2023-Q4 <br> Sales (M): 72.63 <br> Profit (M): 5.55\",\"Ship-Route: Tanker - Coastal <br> Quarter: 2023-Q4 <br> Sales (M): 60.83 <br> Profit (M): 6.02\",\"Ship-Route: Tanker - Long-haul <br> Quarter: 2023-Q4 <br> Sales (M): 68.23 <br> Profit (M): 7.43\",\"Ship-Route: Tanker - Short-haul <br> Quarter: 2023-Q4 <br> Sales (M): 88.16 <br> Profit (M): 7.63\",\"Ship-Route: Tanker - Transoceanic <br> Quarter: 2023-Q4 <br> Sales (M): 69.19 <br> Profit (M): 6.14\",\"Ship-Route: Bulk Carrier - Coastal <br> Quarter: 2024-Q1 <br> Sales (M): 81.38 <br> Profit (M): 8\",\"Ship-Route: Bulk Carrier - Long-haul <br> Quarter: 2024-Q1 <br> Sales (M): 74.82 <br> Profit (M): 6.13\",\"Ship-Route: Bulk Carrier - Short-haul <br> Quarter: 2024-Q1 <br> Sales (M): 79.45 <br> Profit (M): 9.35\",\"Ship-Route: Bulk Carrier - Transoceanic <br> Quarter: 2024-Q1 <br> Sales (M): 91.24 <br> Profit (M): 8.03\",\"Ship-Route: Container Ship - Coastal <br> Quarter: 2024-Q1 <br> Sales (M): 73.75 <br> Profit (M): 7.05\",\"Ship-Route: Container Ship - Long-haul <br> Quarter: 2024-Q1 <br> Sales (M): 87.18 <br> Profit (M): 8.46\",\"Ship-Route: Container Ship - Short-haul <br> Quarter: 2024-Q1 <br> Sales (M): 68.87 <br> Profit (M): 8.39\",\"Ship-Route: Container Ship - Transoceanic <br> Quarter: 2024-Q1 <br> Sales (M): 95.91 <br> Profit (M): 10.7\",\"Ship-Route: Fish Carrier - Coastal <br> Quarter: 2024-Q1 <br> Sales (M): 95.88 <br> Profit (M): 11.22\",\"Ship-Route: Fish Carrier - Long-haul <br> Quarter: 2024-Q1 <br> Sales (M): 83.67 <br> Profit (M): 10.22\",\"Ship-Route: Fish Carrier - Short-haul <br> Quarter: 2024-Q1 <br> Sales (M): 67.07 <br> Profit (M): 6.39\",\"Ship-Route: Fish Carrier - Transoceanic <br> Quarter: 2024-Q1 <br> Sales (M): 83.52 <br> Profit (M): 8.3\",\"Ship-Route: Tanker - Coastal <br> Quarter: 2024-Q1 <br> Sales (M): 72.72 <br> Profit (M): 8.25\",\"Ship-Route: Tanker - Long-haul <br> Quarter: 2024-Q1 <br> Sales (M): 105.8 <br> Profit (M): 9.03\",\"Ship-Route: Tanker - Short-haul <br> Quarter: 2024-Q1 <br> Sales (M): 67.27 <br> Profit (M): 8.5\",\"Ship-Route: Tanker - Transoceanic <br> Quarter: 2024-Q1 <br> Sales (M): 72.43 <br> Profit (M): 7.5\",\"Ship-Route: Bulk Carrier - Coastal <br> Quarter: 2024-Q2 <br> Sales (M): 93.26 <br> Profit (M): 7.08\",\"Ship-Route: Bulk Carrier - Long-haul <br> Quarter: 2024-Q2 <br> Sales (M): 102.71 <br> Profit (M): 11.87\",\"Ship-Route: Bulk Carrier - Short-haul <br> Quarter: 2024-Q2 <br> Sales (M): 84.37 <br> Profit (M): 7.06\",\"Ship-Route: Bulk Carrier - Transoceanic <br> Quarter: 2024-Q2 <br> Sales (M): 83.04 <br> Profit (M): 9.76\",\"Ship-Route: Container Ship - Coastal <br> Quarter: 2024-Q2 <br> Sales (M): 74.21 <br> Profit (M): 8.94\",\"Ship-Route: Container Ship - Long-haul <br> Quarter: 2024-Q2 <br> Sales (M): 98.04 <br> Profit (M): 7.89\",\"Ship-Route: Container Ship - Short-haul <br> Quarter: 2024-Q2 <br> Sales (M): 60.96 <br> Profit (M): 5.48\",\"Ship-Route: Container Ship - Transoceanic <br> Quarter: 2024-Q2 <br> Sales (M): 76.18 <br> Profit (M): 6.99\",\"Ship-Route: Fish Carrier - Coastal <br> Quarter: 2024-Q2 <br> Sales (M): 85.62 <br> Profit (M): 10.02\",\"Ship-Route: Fish Carrier - Long-haul <br> Quarter: 2024-Q2 <br> Sales (M): 119.59 <br> Profit (M): 14.09\",\"Ship-Route: Fish Carrier - Short-haul <br> Quarter: 2024-Q2 <br> Sales (M): 59.58 <br> Profit (M): 5.99\",\"Ship-Route: Fish Carrier - Transoceanic <br> Quarter: 2024-Q2 <br> Sales (M): 92.67 <br> Profit (M): 7.63\",\"Ship-Route: Tanker - Coastal <br> Quarter: 2024-Q2 <br> Sales (M): 77.08 <br> Profit (M): 8.74\",\"Ship-Route: Tanker - Long-haul <br> Quarter: 2024-Q2 <br> Sales (M): 58.91 <br> Profit (M): 5.78\",\"Ship-Route: Tanker - Short-haul <br> Quarter: 2024-Q2 <br> Sales (M): 60.36 <br> Profit (M): 7.16\",\"Ship-Route: Tanker - Transoceanic <br> Quarter: 2024-Q2 <br> Sales (M): 92.83 <br> Profit (M): 10.12\"],\"type\":\"scatter\",\"mode\":\"markers\",\"marker\":{\"autocolorscale\":false,\"color\":[\"rgba(218,193,255,1)\",\"rgba(227,208,255,1)\",\"rgba(231,214,255,1)\",\"rgba(246,239,255,1)\",\"rgba(238,225,255,1)\",\"rgba(232,215,255,1)\",\"rgba(226,206,255,1)\",\"rgba(228,209,255,1)\",\"rgba(239,226,255,1)\",\"rgba(248,242,255,1)\",\"rgba(221,197,255,1)\",\"rgba(198,164,255,1)\",\"rgba(232,215,255,1)\",\"rgba(206,175,255,1)\",\"rgba(224,202,255,1)\",\"rgba(236,222,255,1)\",\"rgba(184,145,255,1)\",\"rgba(0,0,255,1)\",\"rgba(133,88,255,1)\",\"rgba(185,147,255,1)\",\"rgba(185,147,255,1)\",\"rgba(117,73,255,1)\",\"rgba(204,173,255,1)\",\"rgba(192,156,255,1)\",\"rgba(178,138,255,1)\",\"rgba(192,156,255,1)\",\"rgba(189,152,255,1)\",\"rgba(158,114,255,1)\",\"rgba(159,116,255,1)\",\"rgba(141,96,255,1)\",\"rgba(163,120,255,1)\",\"rgba(181,142,255,1)\",\"rgba(174,133,255,1)\",\"rgba(185,148,255,1)\",\"rgba(98,57,255,1)\",\"rgba(190,153,255,1)\",\"rgba(133,88,255,1)\",\"rgba(163,121,255,1)\",\"rgba(134,89,255,1)\",\"rgba(185,147,255,1)\",\"rgba(161,118,255,1)\",\"rgba(161,118,255,1)\",\"rgba(171,129,255,1)\",\"rgba(198,164,255,1)\",\"rgba(192,156,255,1)\",\"rgba(174,134,255,1)\",\"rgba(172,130,255,1)\",\"rgba(191,154,255,1)\",\"rgba(167,124,255,1)\",\"rgba(191,154,255,1)\",\"rgba(147,102,255,1)\",\"rgba(166,124,255,1)\",\"rgba(179,140,255,1)\",\"rgba(160,117,255,1)\",\"rgba(161,118,255,1)\",\"rgba(125,80,255,1)\",\"rgba(115,71,255,1)\",\"rgba(133,88,255,1)\",\"rgba(187,150,255,1)\",\"rgba(162,119,255,1)\",\"rgba(163,120,255,1)\",\"rgba(152,108,255,1)\",\"rgba(160,116,255,1)\",\"rgba(173,132,255,1)\",\"rgba(179,139,255,1)\",\"rgba(101,60,255,1)\",\"rgba(179,140,255,1)\",\"rgba(141,96,255,1)\",\"rgba(153,109,255,1)\",\"rgba(168,126,255,1)\",\"rgba(198,165,255,1)\",\"rgba(180,141,255,1)\",\"rgba(136,91,255,1)\",\"rgba(12,3,255,1)\",\"rgba(192,157,255,1)\",\"rgba(172,130,255,1)\",\"rgba(156,112,255,1)\",\"rgba(195,160,255,1)\",\"rgba(178,138,255,1)\",\"rgba(135,90,255,1)\"],\"opacity\":0.59999999999999998,\"size\":[25.380122086887283,22.553843309348967,21.190384414340826,11.997909537913301,18.138063081657567,20.780798745295655,22.886184030427788,22.166877375726592,17.691579421051152,7.559055118110237,24.616933582629017,30.085738644976345,20.857055946450117,28.449466728428366,23.627477332624416,19.000259647416755,32.72093420939423,45.354330708661422,39.365846252557937,32.499148549477901,32.463323988248476,40.821703231033091,28.822951925063908,31.274205017617081,33.630421330350359,31.307200495783654,31.787239928555213,36.568631180038381,36.330468973123665,38.519787958995359,35.899859648200639,33.106078086520995,34.288739958543289,32.415339030172184,42.179539248535988,31.655568059433413,39.371923181146578,35.789838315533594,39.230914087280794,32.526949931328424,36.061750370960311,36.144347598587046,34.741867217974978,30.171073646077897,31.247453611349531,34.228803141679094,34.62540560806729,31.521882417093675,35.354538336820525,31.50361476159576,37.832660918499329,35.403758069378235,33.47179709495861,36.213336208361568,36.091028904991092,40.114789281105047,40.954123209165296,39.324594066103238,32.070547280988073,35.926698504463808,35.822255695465486,37.254542959935883,36.29590411443688,34.364780100793119,33.517019488998315,41.98152353367648,33.478202677189273,38.545095505770512,37.091791929397317,35.132986029068604,30.005369525740779,33.333475264179313,38.984079257514644,45.257287569944602,31.175037798441807,34.622384122343739,36.731771193773397,30.704940269345958,33.694784124620583,39.159390051109149],\"symbol\":\"circle\",\"line\":{\"width\":1.8897637795275593,\"color\":[\"rgba(218,193,255,1)\",\"rgba(227,208,255,1)\",\"rgba(231,214,255,1)\",\"rgba(246,239,255,1)\",\"rgba(238,225,255,1)\",\"rgba(232,215,255,1)\",\"rgba(226,206,255,1)\",\"rgba(228,209,255,1)\",\"rgba(239,226,255,1)\",\"rgba(248,242,255,1)\",\"rgba(221,197,255,1)\",\"rgba(198,164,255,1)\",\"rgba(232,215,255,1)\",\"rgba(206,175,255,1)\",\"rgba(224,202,255,1)\",\"rgba(236,222,255,1)\",\"rgba(184,145,255,1)\",\"rgba(0,0,255,1)\",\"rgba(133,88,255,1)\",\"rgba(185,147,255,1)\",\"rgba(185,147,255,1)\",\"rgba(117,73,255,1)\",\"rgba(204,173,255,1)\",\"rgba(192,156,255,1)\",\"rgba(178,138,255,1)\",\"rgba(192,156,255,1)\",\"rgba(189,152,255,1)\",\"rgba(158,114,255,1)\",\"rgba(159,116,255,1)\",\"rgba(141,96,255,1)\",\"rgba(163,120,255,1)\",\"rgba(181,142,255,1)\",\"rgba(174,133,255,1)\",\"rgba(185,148,255,1)\",\"rgba(98,57,255,1)\",\"rgba(190,153,255,1)\",\"rgba(133,88,255,1)\",\"rgba(163,121,255,1)\",\"rgba(134,89,255,1)\",\"rgba(185,147,255,1)\",\"rgba(161,118,255,1)\",\"rgba(161,118,255,1)\",\"rgba(171,129,255,1)\",\"rgba(198,164,255,1)\",\"rgba(192,156,255,1)\",\"rgba(174,134,255,1)\",\"rgba(172,130,255,1)\",\"rgba(191,154,255,1)\",\"rgba(167,124,255,1)\",\"rgba(191,154,255,1)\",\"rgba(147,102,255,1)\",\"rgba(166,124,255,1)\",\"rgba(179,140,255,1)\",\"rgba(160,117,255,1)\",\"rgba(161,118,255,1)\",\"rgba(125,80,255,1)\",\"rgba(115,71,255,1)\",\"rgba(133,88,255,1)\",\"rgba(187,150,255,1)\",\"rgba(162,119,255,1)\",\"rgba(163,120,255,1)\",\"rgba(152,108,255,1)\",\"rgba(160,116,255,1)\",\"rgba(173,132,255,1)\",\"rgba(179,139,255,1)\",\"rgba(101,60,255,1)\",\"rgba(179,140,255,1)\",\"rgba(141,96,255,1)\",\"rgba(153,109,255,1)\",\"rgba(168,126,255,1)\",\"rgba(198,165,255,1)\",\"rgba(180,141,255,1)\",\"rgba(136,91,255,1)\",\"rgba(12,3,255,1)\",\"rgba(192,157,255,1)\",\"rgba(172,130,255,1)\",\"rgba(156,112,255,1)\",\"rgba(195,160,255,1)\",\"rgba(178,138,255,1)\",\"rgba(135,90,255,1)\"]}},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[-5,105],\"y\":[50,50],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(102,102,102,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[50,50],\"y\":[-6,126],\"text\":\"\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":1.8897637795275593,\"color\":\"rgba(102,102,102,1)\",\"dash\":\"dash\"},\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[5],\"y\":[90],\"text\":\"Low Sales<br />High Profits\",\"hovertext\":\"\",\"textfont\":{\"size\":15.118110236220474,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[75],\"y\":[90],\"text\":\"High Sales<br />High Profits\",\"hovertext\":\"\",\"textfont\":{\"size\":15.118110236220474,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[5],\"y\":[10],\"text\":\"Low Sales<br />Low Profits\",\"hovertext\":\"\",\"textfont\":{\"size\":15.118110236220474,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[75],\"y\":[10],\"text\":\"High Sales<br />Low Profits\",\"hovertext\":\"\",\"textfont\":{\"size\":15.118110236220474,\"color\":\"rgba(0,0,0,1)\"},\"type\":\"scatter\",\"mode\":\"text\",\"hoveron\":\"points\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[0],\"y\":[0],\"name\":\"62261b052f083c2c9cf3319a8f4afeb6\",\"type\":\"scatter\",\"mode\":\"markers\",\"opacity\":0,\"hoverinfo\":\"skip\",\"showlegend\":false,\"marker\":{\"color\":[0,1],\"colorscale\":[[0,\"#F8F2FF\"],[0.0033444816053511683,\"#F7F2FF\"],[0.0066889632107023454,\"#F7F1FF\"],[0.010033444816053514,\"#F7F0FF\"],[0.013377926421404682,\"#F6EFFF\"],[0.016722408026755849,\"#F6EFFF\"],[0.020066889632107017,\"#F5EEFF\"],[0.023411371237458185,\"#F5EDFF\"],[0.026755852842809354,\"#F4ECFF\"],[0.030100334448160522,\"#F4ECFF\"],[0.033444816053511711,\"#F4EBFF\"],[0.03678929765886288,\"#F3EAFF\"],[0.040133779264214048,\"#F3E9FF\"],[0.043478260869565216,\"#F2E9FF\"],[0.046822742474916398,\"#F2E8FF\"],[0.050167224080267567,\"#F1E7FF\"],[0.053511705685618735,\"#F1E6FF\"],[0.056856187290969903,\"#F1E6FF\"],[0.060200668896321072,\"#F0E5FF\"],[0.06354515050167224,\"#F0E4FF\"],[0.066889632107023408,\"#EFE3FF\"],[0.070234113712374577,\"#EFE3FF\"],[0.073578595317725745,\"#EEE2FF\"],[0.0769230769230769,\"#EEE1FF\"],[0.080267558528428068,\"#EEE1FF\"],[0.083612040133779236,\"#EDE0FF\"],[0.086956521739130405,\"#EDDFFF\"],[0.090301003344481573,\"#ECDEFF\"],[0.093645484949832783,\"#ECDEFF\"],[0.096989966555183951,\"#EBDDFF\"],[0.10033444816053512,\"#EBDCFF\"],[0.10367892976588629,\"#EADBFF\"],[0.10702341137123746,\"#EADBFF\"],[0.11036789297658862,\"#E9DAFF\"],[0.11371237458193979,\"#E9D9FF\"],[0.11705685618729096,\"#E9D8FF\"],[0.12040133779264213,\"#E8D8FF\"],[0.1237458193979933,\"#E8D7FF\"],[0.12709030100334445,\"#E7D6FF\"],[0.13043478260869562,\"#E7D5FF\"],[0.13377926421404679,\"#E6D5FF\"],[0.13712374581939796,\"#E6D4FF\"],[0.14046822742474913,\"#E5D3FF\"],[0.14381270903010029,\"#E5D2FF\"],[0.14715719063545152,\"#E4D2FF\"],[0.15050167224080269,\"#E4D1FF\"],[0.15384615384615385,\"#E4D0FF\"],[0.15719063545150502,\"#E3D0FF\"],[0.16053511705685619,\"#E3CFFF\"],[0.16387959866220736,\"#E2CEFF\"],[0.16722408026755853,\"#E2CDFF\"],[0.1705685618729097,\"#E1CDFF\"],[0.17391304347826086,\"#E1CCFF\"],[0.17725752508361203,\"#E0CBFF\"],[0.1806020066889632,\"#E0CAFF\"],[0.18394648829431437,\"#DFCAFF\"],[0.18729096989966557,\"#DFC9FF\"],[0.19063545150501673,\"#DEC8FF\"],[0.1939799331103679,\"#DEC7FF\"],[0.19732441471571907,\"#DDC7FF\"],[0.20066889632107024,\"#DDC6FF\"],[0.20401337792642141,\"#DDC5FF\"],[0.20735785953177258,\"#DCC5FF\"],[0.21070234113712374,\"#DCC4FF\"],[0.21404682274247491,\"#DBC3FF\"],[0.21739130434782608,\"#DBC2FF\"],[0.22073578595317725,\"#DAC2FF\"],[0.22408026755852842,\"#DAC1FF\"],[0.22742474916387959,\"#D9C0FF\"],[0.23076923076923075,\"#D9BFFF\"],[0.23411371237458192,\"#D8BFFF\"],[0.23745819397993309,\"#D8BEFF\"],[0.24080267558528426,\"#D7BDFF\"],[0.24414715719063546,\"#D7BDFF\"],[0.24749163879598662,\"#D6BCFF\"],[0.25083612040133779,\"#D6BBFF\"],[0.25418060200668896,\"#D5BAFF\"],[0.25752508361204013,\"#D5BAFF\"],[0.2608695652173913,\"#D4B9FF\"],[0.26421404682274247,\"#D4B8FF\"],[0.26755852842809363,\"#D3B7FF\"],[0.2709030100334448,\"#D3B7FF\"],[0.27424749163879597,\"#D2B6FF\"],[0.27759197324414714,\"#D2B5FF\"],[0.28093645484949831,\"#D1B4FF\"],[0.28428093645484948,\"#D1B4FF\"],[0.28762541806020064,\"#D0B3FF\"],[0.29096989966555181,\"#D0B2FF\"],[0.29431438127090298,\"#CFB2FF\"],[0.29765886287625415,\"#CFB1FF\"],[0.30100334448160537,\"#CEB0FF\"],[0.30434782608695654,\"#CEAFFF\"],[0.30769230769230771,\"#CDAFFF\"],[0.31103678929765888,\"#CDAEFF\"],[0.31438127090301005,\"#CCADFF\"],[0.31772575250836121,\"#CCACFF\"],[0.32107023411371238,\"#CBACFF\"],[0.32441471571906355,\"#CBABFF\"],[0.32775919732441472,\"#CAAAFF\"],[0.33110367892976589,\"#CAAAFF\"],[0.33444816053511706,\"#C9A9FF\"],[0.33779264214046822,\"#C9A8FF\"],[0.34113712374581939,\"#C8A7FF\"],[0.34448160535117056,\"#C8A7FF\"],[0.34782608695652173,\"#C7A6FF\"],[0.3511705685618729,\"#C7A5FF\"],[0.35451505016722407,\"#C6A5FF\"],[0.35785953177257523,\"#C6A4FF\"],[0.3612040133779264,\"#C5A3FF\"],[0.36454849498327757,\"#C5A2FF\"],[0.36789297658862874,\"#C4A2FF\"],[0.37123745819397991,\"#C3A1FF\"],[0.37458193979933113,\"#C3A0FF\"],[0.3779264214046823,\"#C29FFF\"],[0.38127090301003347,\"#C29FFF\"],[0.38461538461538464,\"#C19EFF\"],[0.38795986622073581,\"#C19DFF\"],[0.39130434782608697,\"#C09DFF\"],[0.39464882943143814,\"#C09CFF\"],[0.39799331103678931,\"#BF9BFF\"],[0.40133779264214048,\"#BF9AFF\"],[0.40468227424749165,\"#BE9AFF\"],[0.40802675585284282,\"#BE99FF\"],[0.41137123745819398,\"#BD98FF\"],[0.41471571906354515,\"#BC97FF\"],[0.41806020066889632,\"#BC97FF\"],[0.42140468227424749,\"#BB96FF\"],[0.42474916387959866,\"#BB95FF\"],[0.42809364548494983,\"#BA95FF\"],[0.43143812709030099,\"#BA94FF\"],[0.43478260869565216,\"#B993FF\"],[0.43812709030100333,\"#B992FF\"],[0.4414715719063545,\"#B892FF\"],[0.44481605351170567,\"#B791FF\"],[0.44816053511705684,\"#B790FF\"],[0.451505016722408,\"#B690FF\"],[0.45484949832775917,\"#B68FFF\"],[0.45819397993311034,\"#B58EFF\"],[0.46153846153846151,\"#B58DFF\"],[0.46488294314381268,\"#B48DFF\"],[0.46822742474916385,\"#B38CFF\"],[0.47157190635451501,\"#B38BFF\"],[0.47491638795986618,\"#B28BFF\"],[0.47826086956521735,\"#B28AFF\"],[0.48160535117056852,\"#B189FF\"],[0.48494983277591974,\"#B188FF\"],[0.48829431438127091,\"#B088FF\"],[0.49163879598662208,\"#AF87FF\"],[0.49498327759197325,\"#AF86FF\"],[0.49832775919732442,\"#AE85FF\"],[0.50167224080267558,\"#AE85FF\"],[0.50501672240802675,\"#AD84FF\"],[0.50836120401337792,\"#AC83FF\"],[0.51170568561872909,\"#AC83FF\"],[0.51505016722408026,\"#AB82FF\"],[0.51839464882943143,\"#AB81FF\"],[0.52173913043478259,\"#AA80FF\"],[0.52508361204013376,\"#A980FF\"],[0.52842809364548493,\"#A97FFF\"],[0.5317725752508361,\"#A87EFF\"],[0.53511705685618727,\"#A87EFF\"],[0.53846153846153844,\"#A77DFF\"],[0.54180602006688972,\"#A67CFF\"],[0.54515050167224088,\"#A67BFF\"],[0.54849498327759205,\"#A57BFF\"],[0.55183946488294322,\"#A57AFF\"],[0.55518394648829439,\"#A479FF\"],[0.55852842809364556,\"#A378FF\"],[0.56187290969899673,\"#A378FF\"],[0.56521739130434789,\"#A277FF\"],[0.56856187290969906,\"#A176FF\"],[0.57190635451505023,\"#A176FF\"],[0.5752508361204014,\"#A075FF\"],[0.57859531772575257,\"#A074FF\"],[0.58193979933110374,\"#9F73FF\"],[0.5852842809364549,\"#9E73FF\"],[0.58862876254180607,\"#9E72FF\"],[0.59197324414715724,\"#9D71FF\"],[0.59531772575250841,\"#9C70FF\"],[0.59866220735785958,\"#9C70FF\"],[0.60200668896321075,\"#9B6FFF\"],[0.60535117056856191,\"#9A6EFF\"],[0.60869565217391308,\"#9A6EFF\"],[0.61204013377926425,\"#996DFF\"],[0.61538461538461542,\"#986CFF\"],[0.61872909698996659,\"#986BFF\"],[0.62207357859531776,\"#976BFF\"],[0.62541806020066892,\"#966AFF\"],[0.62876254180602009,\"#9669FF\"],[0.63210702341137126,\"#9568FF\"],[0.63545150501672243,\"#9468FF\"],[0.6387959866220736,\"#9467FF\"],[0.64214046822742477,\"#9366FF\"],[0.64548494983277593,\"#9266FF\"],[0.6488294314381271,\"#9265FF\"],[0.65217391304347827,\"#9164FF\"],[0.65551839464882944,\"#9063FF\"],[0.65886287625418061,\"#8F63FF\"],[0.66220735785953178,\"#8F62FF\"],[0.66555183946488294,\"#8E61FF\"],[0.66889632107023411,\"#8D60FF\"],[0.67224080267558528,\"#8D60FF\"],[0.67558528428093645,\"#8C5FFF\"],[0.67892976588628762,\"#8B5EFF\"],[0.68227424749163879,\"#8A5DFF\"],[0.68561872909698995,\"#8A5DFF\"],[0.68896321070234112,\"#895CFF\"],[0.69230769230769229,\"#885BFF\"],[0.69565217391304346,\"#875BFF\"],[0.69899665551839463,\"#875AFF\"],[0.7023411371237458,\"#8659FF\"],[0.70568561872909696,\"#8558FF\"],[0.70903010033444813,\"#8458FF\"],[0.7123745819397993,\"#8457FF\"],[0.71571906354515047,\"#8356FF\"],[0.71906354515050164,\"#8255FF\"],[0.72240802675585281,\"#8155FF\"],[0.72575250836120397,\"#8154FF\"],[0.72909698996655514,\"#8053FF\"],[0.73244147157190631,\"#7F52FF\"],[0.73578595317725748,\"#7E52FF\"],[0.73913043478260865,\"#7D51FF\"],[0.74247491638795982,\"#7D50FF\"],[0.74581939799331098,\"#7C4FFF\"],[0.74916387959866226,\"#7B4FFF\"],[0.75250836120401343,\"#7A4EFF\"],[0.7558528428093646,\"#794DFF\"],[0.75919732441471577,\"#784CFF\"],[0.76254180602006694,\"#784BFF\"],[0.76588628762541811,\"#774BFF\"],[0.76923076923076927,\"#764AFF\"],[0.77257525083612044,\"#7549FF\"],[0.77591973244147161,\"#7448FF\"],[0.77926421404682278,\"#7348FF\"],[0.78260869565217395,\"#7247FF\"],[0.78595317725752512,\"#7246FF\"],[0.78929765886287628,\"#7145FF\"],[0.79264214046822745,\"#7044FF\"],[0.79598662207357862,\"#6F44FF\"],[0.79933110367892979,\"#6E43FF\"],[0.80267558528428096,\"#6D42FF\"],[0.80602006688963213,\"#6C41FF\"],[0.80936454849498329,\"#6B41FF\"],[0.81270903010033446,\"#6A40FF\"],[0.81605351170568563,\"#693FFF\"],[0.8193979933110368,\"#683EFF\"],[0.82274247491638797,\"#673DFF\"],[0.82608695652173914,\"#663DFF\"],[0.8294314381270903,\"#653CFF\"],[0.83277591973244147,\"#643BFF\"],[0.83612040133779264,\"#633AFF\"],[0.83946488294314381,\"#6239FF\"],[0.84280936454849498,\"#6138FF\"],[0.84615384615384615,\"#6038FF\"],[0.84949832775919731,\"#5F37FF\"],[0.85284280936454848,\"#5E36FF\"],[0.85618729096989965,\"#5D35FF\"],[0.85953177257525082,\"#5C34FF\"],[0.86287625418060199,\"#5B33FF\"],[0.86622073578595316,\"#5A32FF\"],[0.86956521739130432,\"#5932FF\"],[0.87290969899665549,\"#5731FF\"],[0.87625418060200666,\"#5630FF\"],[0.87959866220735783,\"#552FFF\"],[0.882943143812709,\"#542EFF\"],[0.88628762541806017,\"#532DFF\"],[0.88963210702341133,\"#512CFF\"],[0.8929765886287625,\"#502BFF\"],[0.89632107023411367,\"#4F2AFF\"],[0.89966555183946484,\"#4E29FF\"],[0.90301003344481601,\"#4C28FF\"],[0.90635451505016718,\"#4B28FF\"],[0.90969899665551834,\"#4A27FF\"],[0.91304347826086951,\"#4826FF\"],[0.91638795986622068,\"#4725FF\"],[0.91973244147157185,\"#4524FF\"],[0.92307692307692302,\"#4423FF\"],[0.92642140468227419,\"#4221FF\"],[0.92976588628762535,\"#4120FF\"],[0.93311036789297652,\"#3F1FFF\"],[0.93645484949832769,\"#3D1EFF\"],[0.93979933110367886,\"#3C1DFF\"],[0.94314381270903003,\"#3A1CFF\"],[0.9464882943143812,\"#381BFF\"],[0.94983277591973236,\"#361AFF\"],[0.95317725752508353,\"#3418FF\"],[0.9565217391304347,\"#3217FF\"],[0.95986622073578587,\"#3016FF\"],[0.96321070234113704,\"#2E14FF\"],[0.96655518394648832,\"#2B13FF\"],[0.96989966555183948,\"#2911FF\"],[0.97324414715719065,\"#2610FF\"],[0.97658862876254182,\"#230EFF\"],[0.97993311036789299,\"#200CFF\"],[0.98327759197324416,\"#1D0AFF\"],[0.98662207357859533,\"#1908FF\"],[0.98996655518394649,\"#1506FF\"],[0.99331103678929766,\"#0F04FF\"],[0.99665551839464883,\"#0802FF\"],[1,\"#0000FF\"]],\"colorbar\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"thickness\":23.039999999999996,\"title\":\"Profit (Million)\",\"titlefont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":18.596928185969286},\"tickmode\":\"array\",\"ticktext\":[\"5\",\"10\"],\"tickvals\":[0.31737229881731954,0.68929771247416838],\"tickfont\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.87754254877543},\"ticklen\":2,\"len\":0.5}},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"layout\":{\"margin\":{\"t\":50.714265947142664,\"r\":9.2984640929846432,\"b\":50.521654905216565,\"l\":62.299709422997111},\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":18.596928185969286},\"title\":{\"text\":\"Quarterly Sales vs Profit by Ship & Route\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":22.316313823163139},\"x\":0,\"xref\":\"paper\"},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-5,105],\"tickmode\":\"array\",\"ticktext\":[\"0%\",\"25%\",\"50%\",\"75%\",\"100%\"],\"tickvals\":[0,24.999999999999996,50,75,100],\"categoryorder\":\"array\",\"categoryarray\":[\"0%\",\"25%\",\"50%\",\"75%\",\"100%\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":4.6492320464923216,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":14.87754254877543},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.8453149175440583,\"zeroline\":false,\"anchor\":\"y\",\"title\":{\"text\":\"Percentile of Quarterly Sales\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":18.596928185969286}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[-6,126],\"tickmode\":\"array\",\"ticktext\":[\"0%\",\"25%\",\"50%\",\"75%\",\"100%\",\"125%\"],\"tickvals\":[0,25,50,75,100,125],\"categoryorder\":\"array\",\"categoryarray\":[\"0%\",\"25%\",\"50%\",\"75%\",\"100%\",\"125%\"],\"nticks\":null,\"ticks\":\"\",\"tickcolor\":null,\"ticklen\":4.6492320464923216,\"tickwidth\":0,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":14.87754254877543},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.8453149175440583,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Percentile of Quarterly Profit\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":18.596928185969286}},\"hoverformat\":\".2f\"},\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":1}],\"showlegend\":false,\"legend\":{\"bgcolor\":null,\"bordercolor\":null,\"borderwidth\":0,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.87754254877543},\"title\":{\"text\":\"Profit (Million)<br />Profit Magnitude (Million)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":18.596928185969286}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"source\":\"A\",\"attrs\":{\"14c96bbef8b0\":{\"x\":{},\"y\":{},\"size\":{},\"colour\":{},\"text\":{},\"type\":\"scatter\"},\"14c946b92213\":{\"yintercept\":{}},\"14c9246c31ab\":{\"xintercept\":{}},\"14c93b30e43b\":{\"x\":{},\"y\":{}},\"14c96d7fbd9\":{\"x\":{},\"y\":{}},\"14c94dd76711\":{\"x\":{},\"y\":{}},\"14c978afb503\":{\"x\":{},\"y\":{}}},\"cur_data\":\"14c96bbef8b0\",\"visdat\":{\"14c96bbef8b0\":[\"function (y) \",\"x\"],\"14c946b92213\":[\"function (y) \",\"x\"],\"14c9246c31ab\":[\"function (y) \",\"x\"],\"14c93b30e43b\":[\"function (y) \",\"x\"],\"14c96d7fbd9\":[\"function (y) \",\"x\"],\"14c94dd76711\":[\"function (y) \",\"x\"],\"14c978afb503\":[\"function (y) \",\"x\"]},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n# Summary & Conclusion\n\nA broad exploratory data analysis (EDA) was conducted to evaluate shipping performance from multiple perspectives—including operational cost structures, revenue patterns, load utilization, and overall profitability. Throughout the analysis, a key assumption was that maintenance, fuel, and other overhead expenses were already embedded in each voyage’s operational cost. This allowed a focused look at profitability and ship–route performance without dissecting individual expense types.\n\nKey Insights\n\n1.  Profitability Distribution\n\n    -   Certain voyages deliver consistently high net profit, while others demonstrate significant negative margins. This gap underscores how effectively cost efficiency and route selection drive financial outcomes.\n\n    -   High revenue does not necessarily guarantee strong profit, suggesting that cost factors—even if aggregated—can still erode otherwise promising voyages.\n\n2.  Route & Ship Type Variations\n\n    -   Examining metrics by route type and ship type illuminates distinct operational profiles: some routes thrive with higher revenue or profit, while others reveal cost inefficiencies or require cargo optimization.\n\n    -   Maintenance status, if reflected in cost, may still affect performance differently across the fleet, indicating a need for ongoing upkeep and operational improvements.\n\n3.  Load Utilization & Revenue Leakage\n\n    -   Insights into average load percentage and potential revenue leakage highlight the financial cost of underutilized capacity. Demand consolidation or dynamic pricing can alleviate partially filled voyages. This includes weekly increase of usage of ships that have low utilization.\n\n4.  Visual Analytics & Bivariate Trends\n\n    -   Bubble charts and other visual analyses, such as sales vs. profit distributions, reveal clear quadrant patterns. Ship–route combinations in the top‐right quadrant (high revenue, high profit) represent operational success, while those in the bottom‐left require immediate attention or potential route realignment.\n\n## Overall Conclusion\n\nUnder the assumption that all relevant costs (maintenance, fuel, etc.) are wrapped into a single operational cost, the focus on voyage profitability clearly identifies which ship–route combinations achieve strong margins and which underperform. High‐performing segments are candidates for scaling or replicating best practices, whereas weaker routes—especially those with large negative profit—may demand cost‐reduction strategies, improved cargo strategies, or potential withdrawal from service. Leveraging these findings enables more precise allocation of resources and targeted optimizations in scheduling and pricing, ultimately strengthening both efficiency and profitability across shipping operations.\n\n# Future Research\n\nFuture research could delve deeper by disaggregating operational costs (e.g., separating maintenance, fuel, and overheads) to pinpoint specific inefficiencies, while also investigating route demand patterns (seasonal fluctuations or market changes) for better cargo allocation and analyzing additional ship attributes (engine efficiency, capacity) to isolate optimal configurations. Integrating predictive modeling would provide forward‐looking cost and revenue forecasts under different operational scenarios, further supporting data‐driven decisions. Beyond profitability, evaluating Environmental, Social, and Governance (ESG) criteria—such as emissions intensity, alternative fuel adoption, and crew welfare—could reveal how green energy solutions and sustainable practices might reduce a vessel’s carbon footprint and comply with evolving regulatory standards. Combining these approaches would produce a holistic assessment of financial performance and environmental responsibility, guiding shipping operations toward both greater profitability and long‐term sustainability.\n\n# Appendix:\n\nThe list of libraries used for the assignment.\n\n-   [**tidyverse**](https://www.tidyverse.org/): A collection of R packages (including dplyr, tidyr, readr, purrr, and more) for data manipulation, exploration, and visualization that share an underlying design philosophy.\n\n-   **ggplot2**: The foundation of the Tidyverse visualization framework, implementing the grammar of graphics to create flexible, layered plots.\n\n-   **skimr**: Provides a convenient summary of data frames, including descriptive statistics for each column.\n\n-   **janitor**: Helps clean and format data frames, particularly useful for making column names consistent and removing duplicates.\n\n-   **SmartEDA**: Automates Exploratory Data Analysis tasks, generating summary statistics, univariate distributions, and more with minimal effort.\n\n-   **easystats**: A suite of packages (e.g., performance, parameters, effectsize) that unify and streamline statistical analyses in R.\n\n-   **gtsummary**: Creates publication-ready summary tables of regression models, descriptive statistics, and more.\n\n-   **ggstatsplot**: Extends ggplot2 by adding statistical details (p-values, confidence intervals) into plots, streamlining the creation of exploratory data visualizations with statistical results.\n\n-   **knitr**: Powers dynamic report generation, allowing R code to be woven into documents (e.g., R Markdown) with embedded outputs and plots.\n\n-   **kableExtra**: Enhances knitr’s kable function, adding styling, formatting, and complex features (like scrollable boxes) to HTML/LaTeX tables.\n\n-   [**patchwork**](https://patchwork.data-imaginist.com/): Simplifies the arrangement of multiple ggplot2-based visualizations into composite figures for improved storytelling.\n\n-   **GGally**: Extends ggplot2 by offering several functions to plot correlation matrices, pairwise scatterplots, parallel coordinate plots, and more.\n\n-   [**ggridges**](https://wilkelab.org/ggridges/): Enables creation of ridgeline plots, useful for visualizing distribution changes over time or across categories.\n\n-   **lubridate**: Facilitates working with dates and times in R, providing intuitive functions to parse, extract, and manipulate time components.\n\n-   [**scales**](https://scales.r-lib.org/): Supports improved data labeling, annotation, and scale transformations for ggplot2, including formatters for percentages, currency, and more.\n\n-   [**ggthemes**](https://jrnold.github.io/ggthemes/): Provides additional themes, scales, and geoms to enhance the appearance of ggplot2 visualizations.\n\n-   [**ggpubr**](https://rpkgs.datanovia.com/ggpubr/): Supplies functions for creating publication-ready plots with minimal effort, facilitating tasks like adding p-values or significance bars.\n\n-   [**gganimate**](https://gganimate.com/): Extends ggplot2 to include animation capabilities, making it possible to visualize dynamic changes over time.\n\n-   [**ggdist**](https://mjskay.github.io/ggdist/): Offers tools for visualizing statistical distributions and uncertainties, such as interval and distribution geoms for ggplot2.\n\n-   [**ggtext**](https://wilkelab.org/ggtext/): Enhances text rendering and formatting in ggplot2, enabling rich markdown/HTML styling within plot labels.\n\n-   [**ggalt**](https://github.com/hrbrmstr/ggalt): A collection of geoms, coordinates, and statistics extending ggplot2 (e.g., dumbbell plots, polar coordinate enhancements).\n\n-   [**ggextra**](https://cran.r-project.org/package=ggExtra): Adds marginal plots and supplementary visual elements (histograms, density plots) to ggplot2 graphics.\n\n-   [**cowplot**](https://wilkelab.org/cowplot/): Offers tools for creating publication-quality ggplot2 figures, including alignment functions and consistent themes.\n\n-   [**ggnewscale**](https://github.com/eliocamp/ggnewscale): Allows definition of multiple independent scales within a single ggplot2 visualization, helpful for complex multivariate displays.\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}